"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[88546],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>h});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=l(r),d=a,h=m["".concat(c,".").concat(d)]||m[d]||u[d]||o;return r?n.createElement(h,i(i({ref:t},p),{},{components:r})):n.createElement(h,i({ref:t},p))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[m]="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},63385:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var n=r(87462),a=(r(67294),r(3905));const o={},i="Chroma",s={unversionedId:"ecosystem/integrations/chroma",id:"ecosystem/integrations/chroma",title:"Chroma",description:"Chroma is a database for building AI applications with embeddings.",source:"@site/docs/ecosystem/integrations/chroma.mdx",sourceDirName:"ecosystem/integrations",slug:"/ecosystem/integrations/chroma",permalink:"/langchain-docs-scratch/docs/ecosystem/integrations/chroma",draft:!1,editUrl:"https://github.com/hwchase17/langchainjs/edit/main/docs/docs/ecosystem/integrations/chroma.mdx",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"CerebriumAI",permalink:"/langchain-docs-scratch/docs/ecosystem/integrations/cerebriumai"},next:{title:"ClearML",permalink:"/langchain-docs-scratch/docs/ecosystem/integrations/clearml_tracking"}},c={},l=[{value:"Installation and Setup",id:"installation-and-setup",level:2},{value:"VectorStore",id:"vectorstore",level:2},{value:"Retriever",id:"retriever",level:2}],p={toc:l},m="wrapper";function u(e){let{components:t,...r}=e;return(0,a.kt)(m,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"chroma"},"Chroma"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("a",{parentName:"p",href:"https://docs.trychroma.com/getting-started"},"Chroma")," is a database for building AI applications with embeddings.")),(0,a.kt)("h2",{id:"installation-and-setup"},"Installation and Setup"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"pip install chromadb\n")),(0,a.kt)("h2",{id:"vectorstore"},"VectorStore"),(0,a.kt)("p",null,"There exists a wrapper around Chroma vector databases, allowing you to use it as a vectorstore,\nwhether for semantic search or example selection."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"from langchain.vectorstores import Chroma\n")),(0,a.kt)("p",null,"For a more detailed walkthrough of the Chroma wrapper, see ",(0,a.kt)("a",{parentName:"p",href:"/docs/modules/data_io/vectorstores/getting_started.ipynb"},"this notebook")),(0,a.kt)("h2",{id:"retriever"},"Retriever"),(0,a.kt)("p",null,"See a ",(0,a.kt)("a",{parentName:"p",href:"/docs/modules/data_io/retrievers/integrations/chroma_self_query.ipynb"},"usage example"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"from langchain.retrievers import SelfQueryRetriever\n")))}u.isMDXComponent=!0}}]);