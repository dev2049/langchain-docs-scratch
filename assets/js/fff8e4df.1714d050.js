"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[98963],{3905:(e,t,o)=>{o.d(t,{Zo:()=>i,kt:()=>f});var r=o(67294);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function c(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function d(e,t){if(null==e)return{};var o,r,n=function(e,t){if(null==e)return{};var o,r,n={},a=Object.keys(e);for(r=0;r<a.length;r++)o=a[r],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)o=a[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var l=r.createContext({}),s=function(e){var t=r.useContext(l),o=t;return e&&(o="function"==typeof e?e(t):c(c({},t),e)),o},i=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var o=e.components,n=e.mdxType,a=e.originalType,l=e.parentName,i=d(e,["components","mdxType","originalType","parentName"]),u=s(o),m=n,f=u["".concat(l,".").concat(m)]||u[m]||p[m]||a;return o?r.createElement(f,c(c({ref:t},i),{},{components:o})):r.createElement(f,c({ref:t},i))}));function f(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=o.length,c=new Array(a);c[0]=m;var d={};for(var l in t)hasOwnProperty.call(t,l)&&(d[l]=t[l]);d.originalType=e,d[u]="string"==typeof e?e:n,c[1]=d;for(var s=2;s<a;s++)c[s]=o[s];return r.createElement.apply(null,c)}return r.createElement.apply(null,o)}m.displayName="MDXCreateElement"},74475:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>f,frontMatter:()=>a,metadata:()=>d,toc:()=>s});var r=o(87462),n=(o(67294),o(3905));const a={},c="Microsoft Word",d={unversionedId:"modules/data_io/document_loaders/integrations/microsoft_word",id:"modules/data_io/document_loaders/integrations/microsoft_word",title:"Microsoft Word",description:"Microsoft Word is a word processor developed by Microsoft.",source:"@site/docs/modules/data_io/document_loaders/integrations/microsoft_word.md",sourceDirName:"modules/data_io/document_loaders/integrations",slug:"/modules/data_io/document_loaders/integrations/microsoft_word",permalink:"/langchain-docs-scratch/docs/modules/data_io/document_loaders/integrations/microsoft_word",draft:!1,editUrl:"https://github.com/hwchase17/langchainjs/edit/main/docs/docs/modules/data_io/document_loaders/integrations/microsoft_word.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Microsoft PowerPoint",permalink:"/langchain-docs-scratch/docs/modules/data_io/document_loaders/integrations/microsoft_powerpoint"},next:{title:"Modern Treasury",permalink:"/langchain-docs-scratch/docs/modules/data_io/document_loaders/integrations/modern_treasury"}},l={},s=[{value:"Using Docx2txt",id:"using-docx2txt",level:2},{value:"Using Unstructured",id:"using-unstructured",level:2},{value:"Retain Elements",id:"retain-elements",level:2}],i=(u="CodeOutputBlock",function(e){return console.warn("Component "+u+" was not imported, exported, or provided by MDXProvider as global scope"),(0,n.kt)("div",e)});var u;const p={toc:s},m="wrapper";function f(e){let{components:t,...o}=e;return(0,n.kt)(m,(0,r.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"microsoft-word"},"Microsoft Word"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},(0,n.kt)("a",{parentName:"p",href:"https://www.microsoft.com/en-us/microsoft-365/word"},"Microsoft Word")," is a word processor developed by Microsoft.")),(0,n.kt)("p",null,"This covers how to load ",(0,n.kt)("inlineCode",{parentName:"p"},"Word")," documents into a document format that we can use downstream."),(0,n.kt)("h2",{id:"using-docx2txt"},"Using Docx2txt"),(0,n.kt)("p",null,"Load .docx using ",(0,n.kt)("inlineCode",{parentName:"p"},"Docx2txt")," into a document."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"from langchain.document_loaders import Docx2txtLoader\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'loader = Docx2txtLoader("example_data/fake.docx")\n')),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"data = loader.load()\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"data\n")),(0,n.kt)(i,{lang:"python",mdxType:"CodeOutputBlock"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"    [Document(page_content='Lorem ipsum dolor sit amet.', metadata={'source': 'example_data/fake.docx'})]\n"))),(0,n.kt)("h2",{id:"using-unstructured"},"Using Unstructured"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"from langchain.document_loaders import UnstructuredWordDocumentLoader\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'loader = UnstructuredWordDocumentLoader("example_data/fake.docx")\n')),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"data = loader.load()\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"data\n")),(0,n.kt)(i,{lang:"python",mdxType:"CodeOutputBlock"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"    [Document(page_content='Lorem ipsum dolor sit amet.', lookup_str='', metadata={'source': 'fake.docx'}, lookup_index=0)]\n"))),(0,n.kt)("h2",{id:"retain-elements"},"Retain Elements"),(0,n.kt)("p",null,'Under the hood, Unstructured creates different "elements" for different chunks of text. By default we combine those together, but you can easily keep that separation by specifying ',(0,n.kt)("inlineCode",{parentName:"p"},'mode="elements"'),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'loader = UnstructuredWordDocumentLoader("example_data/fake.docx", mode="elements")\n')),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"data = loader.load()\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"data[0]\n")),(0,n.kt)(i,{lang:"python",mdxType:"CodeOutputBlock"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"    Document(page_content='Lorem ipsum dolor sit amet.', lookup_str='', metadata={'source': 'fake.docx', 'filename': 'fake.docx', 'category': 'Title'}, lookup_index=0)\n"))))}f.isMDXComponent=!0}}]);