"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[63376],{3905:(e,n,t)=>{t.d(n,{Zo:()=>g,kt:()=>d});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},g=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,g=c(e,["components","mdxType","originalType","parentName"]),p=s(t),m=o,d=p["".concat(l,".").concat(m)]||p[m]||u[m]||i;return t?r.createElement(d,a(a({ref:n},g),{},{components:t})):r.createElement(d,a({ref:n},g))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=m;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c[p]="string"==typeof e?e:o,a[1]=c;for(var s=2;s<i;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},54455:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var r=t(87462),o=(t(67294),t(3905));const i={},a="Huggingface TextGen Inference",c={unversionedId:"modules/model_io/models/llms/integrations/huggingface_textgen_inference",id:"modules/model_io/models/llms/integrations/huggingface_textgen_inference",title:"Huggingface TextGen Inference",description:"Text Generation Inference is a Rust, Python and gRPC server for text generation inference. Used in production at HuggingFace to power LLMs api-inference widgets.",source:"@site/docs/modules/model_io/models/llms/integrations/huggingface_textgen_inference.md",sourceDirName:"modules/model_io/models/llms/integrations",slug:"/modules/model_io/models/llms/integrations/huggingface_textgen_inference",permalink:"/langchain-docs-scratch/docs/modules/model_io/models/llms/integrations/huggingface_textgen_inference",draft:!1,editUrl:"https://github.com/hwchase17/langchainjs/edit/main/docs/docs/modules/model_io/models/llms/integrations/huggingface_textgen_inference.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Hugging Face Local Pipelines",permalink:"/langchain-docs-scratch/docs/modules/model_io/models/llms/integrations/huggingface_pipelines"},next:{title:"Structured Decoding with JSONFormer",permalink:"/langchain-docs-scratch/docs/modules/model_io/models/llms/integrations/jsonformer_experimental"}},l={},s=[],g={toc:s},p="wrapper";function u(e){let{components:n,...t}=e;return(0,o.kt)(p,(0,r.Z)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"huggingface-textgen-inference"},"Huggingface TextGen Inference"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/huggingface/text-generation-inference"},"Text Generation Inference")," is a Rust, Python and gRPC server for text generation inference. Used in production at ",(0,o.kt)("a",{parentName:"p",href:"https://huggingface.co/"},"HuggingFace")," to power LLMs api-inference widgets."),(0,o.kt)("p",null,"This notebooks goes over how to use a self hosted LLM using ",(0,o.kt)("inlineCode",{parentName:"p"},"Text Generation Inference"),"."),(0,o.kt)("p",null,"To use, you should have the ",(0,o.kt)("inlineCode",{parentName:"p"},"text_generation")," python package installed."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"# !pip3 install text_generation\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"llm = HuggingFaceTextGenInference(\n    inference_server_url='http://localhost:8010/',\n    max_new_tokens=512,\n    top_k=10,\n    top_p=0.95,\n    typical_p=0.95,\n    temperature=0.01,\n    repetition_penalty=1.03,\n)\nllm(\"What did foo say about bar?\")\n")))}u.isMDXComponent=!0}}]);