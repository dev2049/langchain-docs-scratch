"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[28591],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(n),d=i,g=m["".concat(l,".").concat(d)]||m[d]||u[d]||r;return n?a.createElement(g,o(o({ref:t},p),{},{components:n})):a.createElement(g,o({ref:t},p))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:i,o[1]=s;for(var c=2;c<r;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4510:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var a=n(87462),i=(n(67294),n(3905));const r={},o="MediaWikiDump",s={unversionedId:"ecosystem/integrations/mediawikidump",id:"ecosystem/integrations/mediawikidump",title:"MediaWikiDump",description:"MediaWiki XML Dumps contain the content of a wiki",source:"@site/docs/ecosystem/integrations/mediawikidump.mdx",sourceDirName:"ecosystem/integrations",slug:"/ecosystem/integrations/mediawikidump",permalink:"/langchain-docs-scratch/docs/ecosystem/integrations/mediawikidump",draft:!1,editUrl:"https://github.com/hwchase17/langchainjs/edit/main/docs/docs/ecosystem/integrations/mediawikidump.mdx",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Llama.cpp",permalink:"/langchain-docs-scratch/docs/ecosystem/integrations/llamacpp"},next:{title:"Metal",permalink:"/langchain-docs-scratch/docs/ecosystem/integrations/metal"}},l={},c=[{value:"Installation and Setup",id:"installation-and-setup",level:2},{value:"Document Loader",id:"document-loader",level:2}],p={toc:c},m="wrapper";function u(e){let{components:t,...n}=e;return(0,i.kt)(m,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"mediawikidump"},"MediaWikiDump"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("a",{parentName:"p",href:"https://www.mediawiki.org/wiki/Manual:Importing_XML_dumps"},"MediaWiki XML Dumps")," contain the content of a wiki\n(wiki pages with all their revisions), without the site-related data. A XML dump does not create a full backup\nof the wiki database, the dump does not contain user accounts, images, edit logs, etc.")),(0,i.kt)("h2",{id:"installation-and-setup"},"Installation and Setup"),(0,i.kt)("p",null,"We need to install several python packages."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"mediawiki-utilities")," supports XML schema 0.11 in unmerged branches."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"pip install -qU git+https://github.com/mediawiki-utilities/python-mwtypes@updates_schema_0.11\n")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"mediawiki-utilities mwxml")," has a bug, fix PR pending."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"pip install -qU git+https://github.com/gdedrouas/python-mwxml@xml_format_0.11\npip install -qU mwparserfromhell\n")),(0,i.kt)("h2",{id:"document-loader"},"Document Loader"),(0,i.kt)("p",null,"See a ",(0,i.kt)("a",{parentName:"p",href:"/docs/modules/data_io/document_loaders/integrations/mediawikidump.ipynb"},"usage example"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"from langchain.document_loaders import MWDumpLoader\n")))}u.isMDXComponent=!0}}]);