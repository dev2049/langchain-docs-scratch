"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[26473],{3905:(e,n,t)=>{t.d(n,{Zo:()=>h,kt:()=>m});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),c=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},h=function(e){var n=c(e.components);return a.createElement(l.Provider,{value:n},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,h=i(e,["components","mdxType","originalType","parentName"]),u=c(t),d=r,m=u["".concat(l,".").concat(d)]||u[d]||p[d]||o;return t?a.createElement(m,s(s({ref:n},h),{},{components:t})):a.createElement(m,s({ref:n},h))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,s=new Array(o);s[0]=d;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i[u]="string"==typeof e?e:r,s[1]=i;for(var c=2;c<o;c++)s[c]=t[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},65756:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>u,default:()=>f,frontMatter:()=>h,metadata:()=>p,toc:()=>m});var a=t(87462),r=(t(67294),t(3905));const o=(s="CodeOutputBlock",function(e){return console.warn("Component "+s+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",e)});var s;const i={toc:[]},l="wrapper";function c(e){let{components:n,...t}=e;return(0,r.kt)(l,(0,a.Z)({},i,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from langchain import LLMMathChain, OpenAI, SerpAPIWrapper, SQLDatabase, SQLDatabaseChain\nfrom langchain.agents import initialize_agent, Tool\nfrom langchain.agents import AgentType\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'llm = OpenAI(temperature=0)\nsearch = SerpAPIWrapper()\nllm_math_chain = LLMMathChain(llm=llm, verbose=True)\ndb = SQLDatabase.from_uri("sqlite:///../../../../../notebooks/Chinook.db")\ndb_chain = SQLDatabaseChain.from_llm(llm, db, verbose=True)\ntools = [\n    Tool(\n        name = "Search",\n        func=search.run,\n        description="useful for when you need to answer questions about current events. You should ask targeted questions"\n    ),\n    Tool(\n        name="Calculator",\n        func=llm_math_chain.run,\n        description="useful for when you need to answer questions about math"\n    ),\n    Tool(\n        name="FooBar DB",\n        func=db_chain.run,\n        description="useful for when you need to answer questions about FooBar. Input should be in the form of a question containing full context"\n    )\n]\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"mrkl = initialize_agent(tools, llm, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'mrkl.run("Who is Leo DiCaprio\'s girlfriend? What is her current age raised to the 0.43 power?")\n')),(0,r.kt)(o,{lang:"python",mdxType:"CodeOutputBlock"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'    \n    \n    > Entering new AgentExecutor chain...\n     I need to find out who Leo DiCaprio\'s girlfriend is and then calculate her age raised to the 0.43 power.\n    Action: Search\n    Action Input: "Who is Leo DiCaprio\'s girlfriend?"\n    Observation: DiCaprio met actor Camila Morrone in December 2017, when she was 20 and he was 43. They were spotted at Coachella and went on multiple vacations together. Some reports suggested that DiCaprio was ready to ask Morrone to marry him. The couple made their red carpet debut at the 2020 Academy Awards.\n    Thought: I need to calculate Camila Morrone\'s age raised to the 0.43 power.\n    Action: Calculator\n    Action Input: 21^0.43\n    \n    > Entering new LLMMathChain chain...\n    21^0.43\n    ```text\n    21**0.43\n    ```\n    ...numexpr.evaluate("21**0.43")...\n    \n    Answer: 3.7030049853137306\n    > Finished chain.\n    \n    Observation: Answer: 3.7030049853137306\n    Thought: I now know the final answer.\n    Final Answer: Camila Morrone is Leo DiCaprio\'s girlfriend and her current age raised to the 0.43 power is 3.7030049853137306.\n    \n    > Finished chain.\n\n\n\n\n\n    "Camila Morrone is Leo DiCaprio\'s girlfriend and her current age raised to the 0.43 power is 3.7030049853137306."\n'))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"mrkl.run(\"What is the full name of the artist who recently released an album called 'The Storm Before the Calm' and are they in the FooBar database? If so, what albums of theirs are in the FooBar database?\")\n")),(0,r.kt)(o,{lang:"python",mdxType:"CodeOutputBlock"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'    \n    \n    > Entering new AgentExecutor chain...\n     I need to find out the artist\'s full name and then search the FooBar database for their albums.\n    Action: Search\n    Action Input: "The Storm Before the Calm" artist\n    Observation: The Storm Before the Calm (stylized in all lowercase) is the tenth (and eighth international) studio album by Canadian-American singer-songwriter Alanis Morissette, released June 17, 2022, via Epiphany Music and Thirty Tigers, as well as by RCA Records in Europe.\n    Thought: I now need to search the FooBar database for Alanis Morissette\'s albums.\n    Action: FooBar DB\n    Action Input: What albums by Alanis Morissette are in the FooBar database?\n    \n    > Entering new SQLDatabaseChain chain...\n    What albums by Alanis Morissette are in the FooBar database?\n    SQLQuery:\n\n    /Users/harrisonchase/workplace/langchain/langchain/sql_database.py:191: SAWarning: Dialect sqlite+pysqlite does *not* support Decimal objects natively, and SQLAlchemy must convert from floating point - rounding errors and other issues may occur. Please consider storing Decimal numbers as strings or integers on this platform for lossless storage.\n      sample_rows = connection.execute(command)\n\n\n     SELECT "Title" FROM "Album" INNER JOIN "Artist" ON "Album"."ArtistId" = "Artist"."ArtistId" WHERE "Name" = \'Alanis Morissette\' LIMIT 5;\n    SQLResult: [(\'Jagged Little Pill\',)]\n    Answer: The albums by Alanis Morissette in the FooBar database are Jagged Little Pill.\n    > Finished chain.\n    \n    Observation:  The albums by Alanis Morissette in the FooBar database are Jagged Little Pill.\n    Thought: I now know the final answer.\n    Final Answer: The artist who released the album \'The Storm Before the Calm\' is Alanis Morissette and the albums of hers in the FooBar database are Jagged Little Pill.\n    \n    > Finished chain.\n\n\n\n\n\n    "The artist who released the album \'The Storm Before the Calm\' is Alanis Morissette and the albums of hers in the FooBar database are Jagged Little Pill."\n'))))}c.isMDXComponent=!0;const h={},u="MRKL",p={unversionedId:"modules/agents/agent_types/mrkl",id:"modules/agents/agent_types/mrkl",title:"MRKL",description:"This notebook showcases using an agent to replicate the MRKL chain.",source:"@site/docs/modules/agents/agent_types/mrkl.mdx",sourceDirName:"modules/agents/agent_types",slug:"/modules/agents/agent_types/mrkl",permalink:"/langchain-docs-scratch/docs/modules/agents/agent_types/mrkl",draft:!1,editUrl:"https://github.com/hwchase17/langchainjs/edit/main/docs/docs/modules/agents/agent_types/mrkl.mdx",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Conversation agent",permalink:"/langchain-docs-scratch/docs/modules/agents/agent_types/conversational_agent"},next:{title:"MRKL Chat",permalink:"/langchain-docs-scratch/docs/modules/agents/agent_types/mrkl_chat"}},d={},m=[],g={toc:m},b="wrapper";function f(e){let{components:n,...t}=e;return(0,r.kt)(b,(0,a.Z)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"mrkl"},"MRKL"),(0,r.kt)("p",null,"This notebook showcases using an agent to replicate the MRKL chain."),(0,r.kt)("p",null,"This uses the example Chinook database.\nTo set it up follow the instructions on ",(0,r.kt)("a",{parentName:"p",href:"https://database.guide/2-sample-databases-sqlite/"},"https://database.guide/2-sample-databases-sqlite/"),", placing the ",(0,r.kt)("inlineCode",{parentName:"p"},".db")," file in a notebooks folder at the root of this repository."),(0,r.kt)(c,{mdxType:"Example"}))}f.isMDXComponent=!0}}]);