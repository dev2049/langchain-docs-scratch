"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[67184],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>y});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=l(n),u=r,y=d["".concat(c,".").concat(u)]||d[u]||m[u]||o;return n?a.createElement(y,s(s({ref:t},p),{},{components:n})):a.createElement(y,s({ref:t},p))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=u;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[d]="string"==typeof e?e:r,s[1]=i;for(var l=2;l<o;l++)s[l]=n[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},54319:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var a=n(87462),r=(n(67294),n(3905));const o={},s="Cassandra",i={unversionedId:"ecosystem/integrations/cassandra",id:"ecosystem/integrations/cassandra",title:"Cassandra",description:"Cassandra is a free and open-source, distributed, wide-column",source:"@site/docs/ecosystem/integrations/cassandra.mdx",sourceDirName:"ecosystem/integrations",slug:"/ecosystem/integrations/cassandra",permalink:"/langchain-docs-scratch/docs/ecosystem/integrations/cassandra",draft:!1,editUrl:"https://github.com/hwchase17/langchainjs/edit/main/docs/docs/ecosystem/integrations/cassandra.mdx",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Blackboard",permalink:"/langchain-docs-scratch/docs/ecosystem/integrations/blackboard"},next:{title:"CerebriumAI",permalink:"/langchain-docs-scratch/docs/ecosystem/integrations/cerebriumai"}},c={},l=[{value:"Installation and Setup",id:"installation-and-setup",level:2},{value:"Memory",id:"memory",level:2}],p={toc:l},d="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"cassandra"},"Cassandra"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Apache_Cassandra"},"Cassandra")," is a free and open-source, distributed, wide-column\nstore, NoSQL database management system designed to handle large amounts of data across many commodity servers,\nproviding high availability with no single point of failure. ",(0,r.kt)("inlineCode",{parentName:"p"},"Cassandra")," offers support for clusters spanning\nmultiple datacenters, with asynchronous masterless replication allowing low latency operations for all clients.\n",(0,r.kt)("inlineCode",{parentName:"p"},"Cassandra")," was designed to implement a combination of ",(0,r.kt)("inlineCode",{parentName:"p"},"Amazon's Dynamo")," distributed storage and replication\ntechniques combined with ",(0,r.kt)("inlineCode",{parentName:"p"},"Google's Bigtable")," data and storage engine model.")),(0,r.kt)("h2",{id:"installation-and-setup"},"Installation and Setup"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pip install cassandra-drive\n")),(0,r.kt)("h2",{id:"memory"},"Memory"),(0,r.kt)("p",null,"See a ",(0,r.kt)("a",{parentName:"p",href:"../modules/memory/examples/cassandra_chat_message_history.ipynb"},"usage example"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from langchain.memory import CassandraChatMessageHistory\n")))}m.isMDXComponent=!0}}]);