"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[28470],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>f});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),u=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=u(e.components);return n.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=u(r),m=a,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||o;return r?n.createElement(f,i(i({ref:t},l),{},{components:r})):n.createElement(f,i({ref:t},l))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[p]="string"==typeof e?e:a,i[1]=s;for(var u=2;u<o;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},44074:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var n=r(87462),a=(r(67294),r(3905));const o={},i="Extraction",s={unversionedId:"use_cases/extraction",id:"use_cases/extraction",title:"Extraction",description:"Most APIs and databases still deal with structured information.",source:"@site/docs/use_cases/extraction.mdx",sourceDirName:"use_cases",slug:"/use_cases/extraction",permalink:"/langchain-docs-scratch/docs/use_cases/extraction",draft:!1,editUrl:"https://github.com/hwchase17/langchainjs/edit/main/docs/docs/use_cases/extraction.mdx",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Analysis of Twitter the-algorithm source code with LangChain, GPT4 and Deep Lake",permalink:"/langchain-docs-scratch/docs/use_cases/code/twitter-the-algorithm-analysis-deeplake"},next:{title:"image_agent",permalink:"/langchain-docs-scratch/docs/use_cases/multi_modal/image_agent"}},c={},u=[],l={toc:u},p="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(p,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"extraction"},"Extraction"),(0,a.kt)("p",null,"Most APIs and databases still deal with structured information.\nTherefore, in order to better work with those, it can be useful to extract structured information from text.\nExamples of this include:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Extracting a structured row to insert into a database from a sentence"),(0,a.kt)("li",{parentName:"ul"},"Extracting multiple rows to insert into a database from a long document"),(0,a.kt)("li",{parentName:"ul"},"Extracting the correct API parameters from a user query")),(0,a.kt)("p",null,"This work is extremely related to ",(0,a.kt)("a",{parentName:"p",href:"../modules/prompts/output_parsers.html"},"output parsing"),".\nOutput parsers are responsible for instructing the LLM to respond in a specific format.\nIn this case, the output parsers specify the format of the data you would like to extract from the document.\nThen, in addition to the output format instructions, the prompt should also contain the data you would like to extract information from."),(0,a.kt)("p",null,"While normal output parsers are good enough for basic structuring of response data,\nwhen doing extraction you often want to extract more complicated or nested structures.\nFor a deep dive on extraction, we recommend checking out ",(0,a.kt)("a",{parentName:"p",href:"https://eyurtsev.github.io/kor/"},(0,a.kt)("inlineCode",{parentName:"a"},"kor")),",\na library that uses the existing LangChain chain and OutputParser abstractions\nbut deep dives on allowing extraction of more complicated schemas."))}d.isMDXComponent=!0}}]);