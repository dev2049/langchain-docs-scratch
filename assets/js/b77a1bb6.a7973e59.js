"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[51055],{3905:(e,r,t)=>{t.d(r,{Zo:()=>p,kt:()=>f});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var m=n.createContext({}),i=function(e){var r=n.useContext(m),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},p=function(e){var r=i(e.components);return n.createElement(m.Provider,{value:r},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},u=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,m=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=i(t),u=o,f=c["".concat(m,".").concat(u)]||c[u]||d[u]||a;return t?n.createElement(f,l(l({ref:r},p),{},{components:t})):n.createElement(f,l({ref:r},p))}));function f(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,l=new Array(a);l[0]=u;var s={};for(var m in r)hasOwnProperty.call(r,m)&&(s[m]=r[m]);s.originalType=e,s[c]="string"==typeof e?e:o,l[1]=s;for(var i=2;i<a;i++)l[i]=t[i];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},63699:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>m,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>i});var n=t(87462),o=(t(67294),t(3905));const a={},l="C Transformers",s={unversionedId:"modules/model_io/models/llms/integrations/ctransformers",id:"modules/model_io/models/llms/integrations/ctransformers",title:"C Transformers",description:"The C Transformers library provides Python bindings for GGML models.",source:"@site/docs/modules/model_io/models/llms/integrations/ctransformers.md",sourceDirName:"modules/model_io/models/llms/integrations",slug:"/modules/model_io/models/llms/integrations/ctransformers",permalink:"/langchain-docs-scratch/docs/modules/model_io/models/llms/integrations/ctransformers",draft:!1,editUrl:"https://github.com/hwchase17/langchainjs/edit/main/docs/docs/modules/model_io/models/llms/integrations/ctransformers.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Cohere",permalink:"/langchain-docs-scratch/docs/modules/model_io/models/llms/integrations/cohere"},next:{title:"Databricks",permalink:"/langchain-docs-scratch/docs/modules/model_io/models/llms/integrations/databricks"}},m={},i=[],p={toc:i},c="wrapper";function d(e){let{components:r,...t}=e;return(0,o.kt)(c,(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"c-transformers"},"C Transformers"),(0,o.kt)("p",null,"The ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/marella/ctransformers"},"C Transformers")," library provides Python bindings for GGML models."),(0,o.kt)("p",null,"This example goes over how to use LangChain to interact with ",(0,o.kt)("inlineCode",{parentName:"p"},"C Transformers")," ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/marella/ctransformers#supported-models"},"models"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Install")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"%pip install ctransformers\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Load Model")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from langchain.llms import CTransformers\n\nllm = CTransformers(model='marella/gpt-2-ggml')\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Generate Text")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"print(llm('AI is going to'))\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Streaming")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from langchain.callbacks.streaming_stdout import StreamingStdOutCallbackHandler\n\nllm = CTransformers(model='marella/gpt-2-ggml', callbacks=[StreamingStdOutCallbackHandler()])\n\nresponse = llm('AI is going to')\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"LLMChain")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'from langchain import PromptTemplate, LLMChain\n\ntemplate = """Question: {question}\n\nAnswer:"""\n\nprompt = PromptTemplate(template=template, input_variables=[\'question\'])\n\nllm_chain = LLMChain(prompt=prompt, llm=llm)\n\nresponse = llm_chain.run(\'What is AI?\')\n')))}d.isMDXComponent=!0}}]);