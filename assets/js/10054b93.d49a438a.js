"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[32211],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>g});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),m=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=m(e.components);return r.createElement(c.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=m(n),p=o,g=d["".concat(c,".").concat(p)]||d[p]||u[p]||a;return n?r.createElement(g,i(i({ref:t},l),{},{components:n})):r.createElement(g,i({ref:t},l))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=p;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[d]="string"==typeof e?e:o,i[1]=s;for(var m=2;m<a;m++)i[m]=n[m];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},48925:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>m});var r=n(87462),o=(n(67294),n(3905));const a={},i="MosaicML embeddings",s={unversionedId:"modules/data_io/text_embedding/integrations/mosaicml",id:"modules/data_io/text_embedding/integrations/mosaicml",title:"MosaicML embeddings",description:"MosaicML offers a managed inference service. You can either use a variety of open source models, or deploy your own.",source:"@site/docs/modules/data_io/text_embedding/integrations/mosaicml.md",sourceDirName:"modules/data_io/text_embedding/integrations",slug:"/modules/data_io/text_embedding/integrations/mosaicml",permalink:"/langchain-docs-scratch/docs/modules/data_io/text_embedding/integrations/mosaicml",draft:!1,editUrl:"https://github.com/hwchase17/langchainjs/edit/main/docs/docs/modules/data_io/text_embedding/integrations/mosaicml.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"ModelScope",permalink:"/langchain-docs-scratch/docs/modules/data_io/text_embedding/integrations/modelscope_hub"},next:{title:"OpenAI",permalink:"/langchain-docs-scratch/docs/modules/data_io/text_embedding/integrations/openai"}},c={},m=[],l={toc:m},d="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"mosaicml-embeddings"},"MosaicML embeddings"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://docs.mosaicml.com/en/latest/inference.html"},"MosaicML")," offers a managed inference service. You can either use a variety of open source models, or deploy your own."),(0,o.kt)("p",null,"This example goes over how to use LangChain to interact with MosaicML Inference for text embedding."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"# sign up for an account: https://forms.mosaicml.com/demo?utm_source=langchain\n\nfrom getpass import getpass\n\nMOSAICML_API_TOKEN = getpass()\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'import os\n\nos.environ["MOSAICML_API_TOKEN"] = MOSAICML_API_TOKEN\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from langchain.embeddings import MosaicMLInstructorEmbeddings\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'embeddings = MosaicMLInstructorEmbeddings(\n    query_instruction="Represent the query for retrieval: "\n)\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'query_text = "This is a test query."\nquery_result = embeddings.embed_query(query_text)\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'document_text = "This is a test document."\ndocument_result = embeddings.embed_documents([document_text])\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'import numpy as np\n\nquery_numpy = np.array(query_result)\ndocument_numpy = np.array(document_result[0])\nsimilarity = np.dot(query_numpy, document_numpy) / (np.linalg.norm(query_numpy)*np.linalg.norm(document_numpy))\nprint(f"Cosine similarity between document and query: {similarity}")\n')))}u.isMDXComponent=!0}}]);