"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[39118],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>p});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},m="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=l(n),d=o,p=m["".concat(c,".").concat(d)]||m[d]||h[d]||r;return n?a.createElement(p,i(i({ref:t},u),{},{components:n})):a.createElement(p,i({ref:t},u))}));function p(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[m]="string"==typeof e?e:o,i[1]=s;for(var l=2;l<r;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},63086:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var a=n(87462),o=(n(67294),n(3905));const r={},i="Zep Memory",s={unversionedId:"modules/memory/integrations/zep_memory",id:"modules/memory/integrations/zep_memory",title:"Zep Memory",description:"REACT Agent Chat Message History Example",source:"@site/docs/modules/memory/integrations/zep_memory.md",sourceDirName:"modules/memory/integrations",slug:"/modules/memory/integrations/zep_memory",permalink:"/langchain-docs-scratch/docs/modules/memory/integrations/zep_memory",draft:!1,editUrl:"https://github.com/hwchase17/langchainjs/edit/main/docs/docs/modules/memory/integrations/zep_memory.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Redis Chat Message History",permalink:"/langchain-docs-scratch/docs/modules/memory/integrations/redis_chat_message_history"},next:{title:"Agents",permalink:"/langchain-docs-scratch/docs/modules/agents/"}},c={},l=[{value:"REACT Agent Chat Message History Example",id:"react-agent-chat-message-history-example",level:2},{value:"Initialize the Zep Chat Message History Class and initialize the Agent",id:"initialize-the-zep-chat-message-history-class-and-initialize-the-agent",level:3},{value:"Add some history data",id:"add-some-history-data",level:3},{value:"Run the agent",id:"run-the-agent",level:3},{value:"Inspect the Zep memory",id:"inspect-the-zep-memory",level:3},{value:"Vector search over the Zep memory",id:"vector-search-over-the-zep-memory",level:3}],u=(m="CodeOutputBlock",function(e){return console.warn("Component "+m+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",e)});var m;const h={toc:l},d="wrapper";function p(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"zep-memory"},"Zep Memory"),(0,o.kt)("h2",{id:"react-agent-chat-message-history-example"},"REACT Agent Chat Message History Example"),(0,o.kt)("p",null,"This notebook demonstrates how to use the ",(0,o.kt)("a",{parentName:"p",href:"https://getzep.github.io/"},"Zep Long-term Memory Store")," as memory for your chatbot."),(0,o.kt)("p",null,"We'll demonstrate:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Adding conversation history to the Zep memory store."),(0,o.kt)("li",{parentName:"ol"},"Running an agent and having message automatically added to the store."),(0,o.kt)("li",{parentName:"ol"},"Viewing the enriched messages."),(0,o.kt)("li",{parentName:"ol"},"Vector search over the conversation history.")),(0,o.kt)("p",null,"More on Zep:"),(0,o.kt)("p",null,"Zep stores, summarizes, embeds, indexes, and enriches conversational AI chat histories, and exposes them via simple, low-latency APIs."),(0,o.kt)("p",null,"Key Features:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Long-term memory persistence, with access to historical messages irrespective of your summarization strategy."),(0,o.kt)("li",{parentName:"ul"},"Auto-summarization of memory messages based on a configurable message window. A series of summaries are stored, providing flexibility for future summarization strategies."),(0,o.kt)("li",{parentName:"ul"},"Vector search over memories, with messages automatically embedded on creation."),(0,o.kt)("li",{parentName:"ul"},"Auto-token counting of memories and summaries, allowing finer-grained control over prompt assembly."),(0,o.kt)("li",{parentName:"ul"},"Python and JavaScript SDKs.")),(0,o.kt)("p",null,"Zep project: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/getzep/zep"},"https://github.com/getzep/zep"),"\nDocs: ",(0,o.kt)("a",{parentName:"p",href:"https://getzep.github.io/"},"https://getzep.github.io")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'from langchain.memory.chat_message_histories import ZepChatMessageHistory\nfrom langchain.memory import ConversationBufferMemory\nfrom langchain import OpenAI\nfrom langchain.schema import HumanMessage, AIMessage\nfrom langchain.tools import DuckDuckGoSearchRun\nfrom langchain.agents import initialize_agent, AgentType\nfrom uuid import uuid4\n\n\n# Set this to your Zep server URL\nZEP_API_URL = "http://localhost:8000"\n\nsession_id = str(uuid4())  # This is a unique identifier for the user\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"# Load your OpenAI key from a .env file\nfrom dotenv import load_dotenv\n\nload_dotenv()\n")),(0,o.kt)(u,{lang:"python",mdxType:"CodeOutputBlock"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"    True\n"))),(0,o.kt)("h3",{id:"initialize-the-zep-chat-message-history-class-and-initialize-the-agent"},"Initialize the Zep Chat Message History Class and initialize the Agent"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'ddg = DuckDuckGoSearchRun()\ntools = [ddg]\n\n# Set up Zep Chat History\nzep_chat_history = ZepChatMessageHistory(\n    session_id=session_id,\n    url=ZEP_API_URL,\n)\n\n# Use a standard ConversationBufferMemory to encapsulate the Zep chat history\nmemory = ConversationBufferMemory(\n    memory_key="chat_history", chat_memory=zep_chat_history\n)\n\n# Initialize the agent\nllm = OpenAI(temperature=0)\nagent_chain = initialize_agent(\n    tools,\n    llm,\n    agent=AgentType.CONVERSATIONAL_REACT_DESCRIPTION,\n    verbose=True,\n    memory=memory,\n)\n')),(0,o.kt)("h3",{id:"add-some-history-data"},"Add some history data"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'# Preload some messages into the memory. The default message window is 12 messages. We want to push beyond this to demonstrate auto-summarization.\ntest_history = [\n    {"role": "human", "content": "Who was Octavia Butler?"},\n    {\n        "role": "ai",\n        "content": (\n            "Octavia Estelle Butler (June 22, 1947 \u2013 February 24, 2006) was an American"\n            " science fiction author."\n        ),\n    },\n    {"role": "human", "content": "Which books of hers were made into movies?"},\n    {\n        "role": "ai",\n        "content": (\n            "The most well-known adaptation of Octavia Butler\'s work is the FX series"\n            " Kindred, based on her novel of the same name."\n        ),\n    },\n    {"role": "human", "content": "Who were her contemporaries?"},\n    {\n        "role": "ai",\n        "content": (\n            "Octavia Butler\'s contemporaries included Ursula K. Le Guin, Samuel R."\n            " Delany, and Joanna Russ."\n        ),\n    },\n    {"role": "human", "content": "What awards did she win?"},\n    {\n        "role": "ai",\n        "content": (\n            "Octavia Butler won the Hugo Award, the Nebula Award, and the MacArthur"\n            " Fellowship."\n        ),\n    },\n    {\n        "role": "human",\n        "content": "Which other women sci-fi writers might I want to read?",\n    },\n    {\n        "role": "ai",\n        "content": "You might want to read Ursula K. Le Guin or Joanna Russ.",\n    },\n    {\n        "role": "human",\n        "content": (\n            "Write a short synopsis of Butler\'s book, Parable of the Sower. What is it"\n            " about?"\n        ),\n    },\n    {\n        "role": "ai",\n        "content": (\n            "Parable of the Sower is a science fiction novel by Octavia Butler,"\n            " published in 1993. It follows the story of Lauren Olamina, a young woman"\n            " living in a dystopian future where society has collapsed due to"\n            " environmental disasters, poverty, and violence."\n        ),\n    },\n]\n\nfor msg in test_history:\n    zep_chat_history.append(\n        HumanMessage(content=msg["content"])\n        if msg["role"] == "human"\n        else AIMessage(content=msg["content"])\n    )\n')),(0,o.kt)("h3",{id:"run-the-agent"},"Run the agent"),(0,o.kt)("p",null,"Doing so will automatically add the input and response to the Zep memory."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'agent_chain.run(\n    input="WWhat is the book\'s relevance to the challenges facing contemporary society?"\n)\n')),(0,o.kt)(u,{lang:"python",mdxType:"CodeOutputBlock"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"    \n    \n    > Entering new AgentExecutor chain...\n    Thought: Do I need to use a tool? No\n    AI: Parable of the Sower is a prescient novel that speaks to the challenges facing contemporary society, such as climate change, economic inequality, and the rise of authoritarianism. It is a cautionary tale that warns of the dangers of ignoring these issues and the importance of taking action to address them.\n    \n    > Finished chain.\n\n\n\n\n\n    'Parable of the Sower is a prescient novel that speaks to the challenges facing contemporary society, such as climate change, economic inequality, and the rise of authoritarianism. It is a cautionary tale that warns of the dangers of ignoring these issues and the importance of taking action to address them.'\n"))),(0,o.kt)("h3",{id:"inspect-the-zep-memory"},"Inspect the Zep memory"),(0,o.kt)("p",null,"Note the summary, and that the history has been enriched with token counts, UUIDs, and timestamps."),(0,o.kt)("p",null,"Summaries are biased towards the most recent messages."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'def print_messages(messages):\n    for m in messages:\n        print(m.to_dict())\n\n\nprint(zep_chat_history.zep_summary)\nprint("\\n")\nprint_messages(zep_chat_history.zep_messages)\n')),(0,o.kt)(u,{lang:"python",mdxType:"CodeOutputBlock"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"    The conversation is about Octavia Butler. The AI describes her as an American science fiction author and mentions the\n    FX series Kindred as a well-known adaptation of her work. The human then asks about her contemporaries, and the AI lists \n    Ursula K. Le Guin, Samuel R. Delany, and Joanna Russ.\n    \n    \n    {'role': 'human', 'content': 'What awards did she win?', 'uuid': '9fa75c3c-edae-41e3-b9bc-9fcf16b523c9', 'created_at': '2023-05-25T15:09:41.91662Z', 'token_count': 8}\n    {'role': 'ai', 'content': 'Octavia Butler won the Hugo Award, the Nebula Award, and the MacArthur Fellowship.', 'uuid': 'def4636c-32cb-49ed-b671-32035a034712', 'created_at': '2023-05-25T15:09:41.919874Z', 'token_count': 21}\n    {'role': 'human', 'content': 'Which other women sci-fi writers might I want to read?', 'uuid': '6e87bd4a-bc23-451e-ae36-05a140415270', 'created_at': '2023-05-25T15:09:41.923771Z', 'token_count': 14}\n    {'role': 'ai', 'content': 'You might want to read Ursula K. Le Guin or Joanna Russ.', 'uuid': 'f65d8dde-9ee8-4983-9da6-ba789b7e8aa4', 'created_at': '2023-05-25T15:09:41.935254Z', 'token_count': 18}\n    {'role': 'human', 'content': \"Write a short synopsis of Butler's book, Parable of the Sower. What is it about?\", 'uuid': '5678d056-7f05-4e70-b8e5-f85efa56db01', 'created_at': '2023-05-25T15:09:41.938974Z', 'token_count': 23}\n    {'role': 'ai', 'content': 'Parable of the Sower is a science fiction novel by Octavia Butler, published in 1993. It follows the story of Lauren Olamina, a young woman living in a dystopian future where society has collapsed due to environmental disasters, poverty, and violence.', 'uuid': '50d64946-9239-4327-83e6-71dcbdd16198', 'created_at': '2023-05-25T15:09:41.957437Z', 'token_count': 56}\n    {'role': 'human', 'content': \"WWhat is the book's relevance to the challenges facing contemporary society?\", 'uuid': 'a39cfc07-8858-480a-9026-fc47a8ef7001', 'created_at': '2023-05-25T15:09:50.469533Z', 'token_count': 16}\n    {'role': 'ai', 'content': 'Parable of the Sower is a prescient novel that speaks to the challenges facing contemporary society, such as climate change, economic inequality, and the rise of authoritarianism. It is a cautionary tale that warns of the dangers of ignoring these issues and the importance of taking action to address them.', 'uuid': 'a4ecf0fe-fdd0-4aad-b72b-efde2e6830cc', 'created_at': '2023-05-25T15:09:50.473793Z', 'token_count': 62}\n"))),(0,o.kt)("h3",{id:"vector-search-over-the-zep-memory"},"Vector search over the Zep memory"),(0,o.kt)("p",null,"Zep provides native vector search over historical conversation memory. Embedding happens automatically."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'search_results = zep_chat_history.search("who are some famous women sci-fi authors?")\nfor r in search_results:\n    print(r.message, r.dist)\n')),(0,o.kt)(u,{lang:"python",mdxType:"CodeOutputBlock"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"    {'uuid': '6e87bd4a-bc23-451e-ae36-05a140415270', 'created_at': '2023-05-25T15:09:41.923771Z', 'role': 'human', 'content': 'Which other women sci-fi writers might I want to read?', 'token_count': 14} 0.9118298949424545\n    {'uuid': 'f65d8dde-9ee8-4983-9da6-ba789b7e8aa4', 'created_at': '2023-05-25T15:09:41.935254Z', 'role': 'ai', 'content': 'You might want to read Ursula K. Le Guin or Joanna Russ.', 'token_count': 18} 0.8533024416448016\n    {'uuid': '52cfe3e8-b800-4dd8-a7dd-8e9e4764dfc8', 'created_at': '2023-05-25T15:09:41.913856Z', 'role': 'ai', 'content': \"Octavia Butler's contemporaries included Ursula K. Le Guin, Samuel R. Delany, and Joanna Russ.\", 'token_count': 27} 0.852352466457884\n    {'uuid': 'd40da612-0867-4a43-92ec-778b86490a39', 'created_at': '2023-05-25T15:09:41.858543Z', 'role': 'human', 'content': 'Who was Octavia Butler?', 'token_count': 8} 0.8235468913583194\n    {'uuid': '4fcfbce4-7bfa-44bd-879a-8cbf265bdcf9', 'created_at': '2023-05-25T15:09:41.893848Z', 'role': 'ai', 'content': 'Octavia Estelle Butler (June 22, 1947 \u2013 February 24, 2006) was an American science fiction author.', 'token_count': 31} 0.8204317130595353\n    {'uuid': 'def4636c-32cb-49ed-b671-32035a034712', 'created_at': '2023-05-25T15:09:41.919874Z', 'role': 'ai', 'content': 'Octavia Butler won the Hugo Award, the Nebula Award, and the MacArthur Fellowship.', 'token_count': 21} 0.8196714827228725\n    {'uuid': '862107de-8f6f-43c0-91fa-4441f01b2b3a', 'created_at': '2023-05-25T15:09:41.898149Z', 'role': 'human', 'content': 'Which books of hers were made into movies?', 'token_count': 11} 0.7954322970428519\n    {'uuid': '97164506-90fe-4c71-9539-69ebcd1d90a2', 'created_at': '2023-05-25T15:09:41.90887Z', 'role': 'human', 'content': 'Who were her contemporaries?', 'token_count': 8} 0.7942531405021976\n    {'uuid': '50d64946-9239-4327-83e6-71dcbdd16198', 'created_at': '2023-05-25T15:09:41.957437Z', 'role': 'ai', 'content': 'Parable of the Sower is a science fiction novel by Octavia Butler, published in 1993. It follows the story of Lauren Olamina, a young woman living in a dystopian future where society has collapsed due to environmental disasters, poverty, and violence.', 'token_count': 56} 0.78144769172694\n    {'uuid': 'c460ffd4-0715-4c69-b793-1092054973e6', 'created_at': '2023-05-25T15:09:41.903082Z', 'role': 'ai', 'content': \"The most well-known adaptation of Octavia Butler's work is the FX series Kindred, based on her novel of the same name.\", 'token_count': 29} 0.7811962820699464\n"))))}p.isMDXComponent=!0}}]);