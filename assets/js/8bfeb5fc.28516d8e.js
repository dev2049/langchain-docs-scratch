"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[64488],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>h});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(r),m=a,h=u["".concat(l,".").concat(m)]||u[m]||d[m]||o;return r?n.createElement(h,s(s({ref:t},p),{},{components:r})):n.createElement(h,s({ref:t},p))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:a,s[1]=i;for(var c=2;c<o;c++)s[c]=r[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},37005:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var n=r(87462),a=(r(67294),r(3905));const o={},s="AtlasDB",i={unversionedId:"ecosystem/integrations/atlas",id:"ecosystem/integrations/atlas",title:"AtlasDB",description:"This page covers how to use Nomic's Atlas ecosystem within LangChain.",source:"@site/docs/ecosystem/integrations/atlas.mdx",sourceDirName:"ecosystem/integrations",slug:"/ecosystem/integrations/atlas",permalink:"/langchain-docs-scratch/docs/ecosystem/integrations/atlas",draft:!1,editUrl:"https://github.com/hwchase17/langchainjs/edit/main/docs/docs/ecosystem/integrations/atlas.mdx",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Arxiv",permalink:"/langchain-docs-scratch/docs/ecosystem/integrations/arxiv"},next:{title:"AWS S3 Directory",permalink:"/langchain-docs-scratch/docs/ecosystem/integrations/aws_s3"}},l={},c=[{value:"Installation and Setup",id:"installation-and-setup",level:2},{value:"Wrappers",id:"wrappers",level:2},{value:"VectorStore",id:"vectorstore",level:3}],p={toc:c},u="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"atlasdb"},"AtlasDB"),(0,a.kt)("p",null,"This page covers how to use Nomic's Atlas ecosystem within LangChain.\nIt is broken into two parts: installation and setup, and then references to specific Atlas wrappers."),(0,a.kt)("h2",{id:"installation-and-setup"},"Installation and Setup"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Install the Python package with ",(0,a.kt)("inlineCode",{parentName:"li"},"pip install nomic")),(0,a.kt)("li",{parentName:"ul"},"Nomic is also included in langchains poetry extras ",(0,a.kt)("inlineCode",{parentName:"li"},"poetry install -E all"))),(0,a.kt)("h2",{id:"wrappers"},"Wrappers"),(0,a.kt)("h3",{id:"vectorstore"},"VectorStore"),(0,a.kt)("p",null,"There exists a wrapper around the Atlas neural database, allowing you to use it as a vectorstore.\nThis vectorstore also gives you full access to the underlying AtlasProject object, which will allow you to use the full range of Atlas map interactions, such as bulk tagging and automatic topic modeling.\nPlease see ",(0,a.kt)("a",{parentName:"p",href:"https://docs.nomic.ai/atlas_api.html"},"the Atlas docs")," for more detailed information."),(0,a.kt)("p",null,"To import this vectorstore:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"from langchain.vectorstores import AtlasDB\n")),(0,a.kt)("p",null,"For a more detailed walkthrough of the AtlasDB wrapper, see ",(0,a.kt)("a",{parentName:"p",href:"../modules/indexes/vectorstores/examples/atlas.ipynb"},"this notebook")))}d.isMDXComponent=!0}}]);