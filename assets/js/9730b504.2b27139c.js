"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[53527],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>y});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),c=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=c(e.components);return o.createElement(l.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=c(n),m=r,y=p["".concat(l,".").concat(m)]||p[m]||u[m]||a;return n?o.createElement(y,s(s({ref:t},d),{},{components:n})):o.createElement(y,s({ref:t},d))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,s=new Array(a);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[p]="string"==typeof e?e:r,s[1]=i;for(var c=2;c<a;c++)s[c]=n[c];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},96817:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>y,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var o=n(87462),r=(n(67294),n(3905));const a={},s="AnalyticDB",i={unversionedId:"modules/data_io/vectorstores/integrations/analyticdb",id:"modules/data_io/vectorstores/integrations/analyticdb",title:"AnalyticDB",description:"AnalyticDB for PostgreSQL is a massively parallel processing (MPP) data warehousing service that is designed to analyze large volumes of data online.",source:"@site/docs/modules/data_io/vectorstores/integrations/analyticdb.md",sourceDirName:"modules/data_io/vectorstores/integrations",slug:"/modules/data_io/vectorstores/integrations/analyticdb",permalink:"/langchain-docs-scratch/docs/modules/data_io/vectorstores/integrations/analyticdb",draft:!1,editUrl:"https://github.com/hwchase17/langchainjs/edit/main/docs/docs/modules/data_io/vectorstores/integrations/analyticdb.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Vector stores",permalink:"/langchain-docs-scratch/docs/modules/data_io/vectorstores/"},next:{title:"Annoy",permalink:"/langchain-docs-scratch/docs/modules/data_io/vectorstores/integrations/annoy"}},l={},c=[],d=(p="CodeOutputBlock",function(e){return console.warn("Component "+p+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",e)});var p;const u={toc:c},m="wrapper";function y(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"analyticdb"},"AnalyticDB"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("a",{parentName:"p",href:"https://www.alibabacloud.com/help/en/analyticdb-for-postgresql/latest/product-introduction-overview"},"AnalyticDB for PostgreSQL")," is a massively parallel processing (MPP) data warehousing service that is designed to analyze large volumes of data online.")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"AnalyticDB for PostgreSQL")," is developed based on the open source ",(0,r.kt)("inlineCode",{parentName:"p"},"Greenplum Database")," project and is enhanced with in-depth extensions by ",(0,r.kt)("inlineCode",{parentName:"p"},"Alibaba Cloud"),". AnalyticDB for PostgreSQL is compatible with the ANSI SQL 2003 syntax and the PostgreSQL and Oracle database ecosystems. AnalyticDB for PostgreSQL also supports row store and column store. AnalyticDB for PostgreSQL processes petabytes of data offline at a high performance level and supports highly concurrent online queries.")),(0,r.kt)("p",null,"This notebook shows how to use functionality related to the ",(0,r.kt)("inlineCode",{parentName:"p"},"AnalyticDB")," vector database.\nTo run, you should have an ",(0,r.kt)("a",{parentName:"p",href:"https://www.alibabacloud.com/help/en/analyticdb-for-postgresql/latest/product-introduction-overview"},"AnalyticDB")," instance up and running:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Using ",(0,r.kt)("a",{parentName:"li",href:"https://www.alibabacloud.com/product/hybriddb-postgresql"},"AnalyticDB Cloud Vector Database"),". Click here to fast deploy it.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from langchain.embeddings.openai import OpenAIEmbeddings\nfrom langchain.text_splitter import CharacterTextSplitter\nfrom langchain.vectorstores import AnalyticDB\n")),(0,r.kt)("p",null,"Split documents and get embeddings by call OpenAI API"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from langchain.document_loaders import TextLoader\nloader = TextLoader('../../../state_of_the_union.txt')\ndocuments = loader.load()\ntext_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=0)\ndocs = text_splitter.split_documents(documents)\n\nembeddings = OpenAIEmbeddings()\n")),(0,r.kt)("p",null,"Connect to AnalyticDB by setting related ENVIRONMENTS."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"export PG_HOST={your_analyticdb_hostname}\nexport PG_PORT={your_analyticdb_port} # Optional, default is 5432\nexport PG_DATABASE={your_database} # Optional, default is postgres\nexport PG_USER={database_username}\nexport PG_PASSWORD={database_password}\n")),(0,r.kt)("p",null,"Then store your embeddings and documents into AnalyticDB"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'import os\n\nconnection_string = AnalyticDB.connection_string_from_db_params(\n    driver=os.environ.get("PG_DRIVER", "psycopg2cffi"),\n    host=os.environ.get("PG_HOST", "localhost"),\n    port=int(os.environ.get("PG_PORT", "5432")),\n    database=os.environ.get("PG_DATABASE", "postgres"),\n    user=os.environ.get("PG_USER", "postgres"),\n    password=os.environ.get("PG_PASSWORD", "postgres"),\n)\n\nvector_db = AnalyticDB.from_documents(\n    docs,\n    embeddings,\n    connection_string= connection_string,\n)\n')),(0,r.kt)("p",null,"Query and retrieve data"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'query = "What did the president say about Ketanji Brown Jackson"\ndocs = vector_db.similarity_search(query)\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"print(docs[0].page_content)\n")),(0,r.kt)(d,{lang:"python",mdxType:"CodeOutputBlock"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"    Tonight. I call on the Senate to: Pass the Freedom to Vote Act. Pass the John Lewis Voting Rights Act. And while you\u2019re at it, pass the Disclose Act so Americans can know who is funding our elections. \n    \n    Tonight, I\u2019d like to honor someone who has dedicated his life to serve this country: Justice Stephen Breyer\u2014an Army veteran, Constitutional scholar, and retiring Justice of the United States Supreme Court. Justice Breyer, thank you for your service. \n    \n    One of the most serious constitutional responsibilities a President has is nominating someone to serve on the United States Supreme Court. \n    \n    And I did that 4 days ago, when I nominated Circuit Court of Appeals Judge Ketanji Brown Jackson. One of our nation\u2019s top legal minds, who will continue Justice Breyer\u2019s legacy of excellence.\n"))))}y.isMDXComponent=!0}}]);