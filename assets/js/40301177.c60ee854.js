"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[62987],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>d});var n=a(67294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=s(a),g=l,d=m["".concat(p,".").concat(g)]||m[g]||u[g]||r;return a?n.createElement(d,o(o({ref:t},c),{},{components:a})):n.createElement(d,o({ref:t},c))}));function d(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,o=new Array(r);o[0]=g;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[m]="string"==typeof e?e:l,o[1]=i;for(var s=2;s<r;s++)o[s]=a[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}g.displayName="MDXCreateElement"},76865:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>s});var n=a(87462),l=(a(67294),a(3905));const r={},o="Hugging Face Hub",i={unversionedId:"modules/model_io/models/llms/integrations/huggingface_hub",id:"modules/model_io/models/llms/integrations/huggingface_hub",title:"Hugging Face Hub",description:"The Hugging Face Hub is a platform with over 120k models, 20k datasets, and 50k demo apps (Spaces), all open source and publicly available, in an online platform where people can easily collaborate and build ML together.",source:"@site/docs/modules/model_io/models/llms/integrations/huggingface_hub.md",sourceDirName:"modules/model_io/models/llms/integrations",slug:"/modules/model_io/models/llms/integrations/huggingface_hub",permalink:"/langchain-docs-scratch/docs/modules/model_io/models/llms/integrations/huggingface_hub",draft:!1,editUrl:"https://github.com/hwchase17/langchainjs/edit/main/docs/docs/modules/model_io/models/llms/integrations/huggingface_hub.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"GPT4All",permalink:"/langchain-docs-scratch/docs/modules/model_io/models/llms/integrations/gpt4all"},next:{title:"Hugging Face Local Pipelines",permalink:"/langchain-docs-scratch/docs/modules/model_io/models/llms/integrations/huggingface_pipelines"}},p={},s=[{value:"Examples",id:"examples",level:2},{value:"StableLM, by Stability AI",id:"stablelm-by-stability-ai",level:3},{value:"Dolly, by DataBricks",id:"dolly-by-databricks",level:3},{value:"Camel, by Writer",id:"camel-by-writer",level:3}],c={toc:s},m="wrapper";function u(e){let{components:t,...a}=e;return(0,l.kt)(m,(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"hugging-face-hub"},"Hugging Face Hub"),(0,l.kt)("p",null,"The ",(0,l.kt)("a",{parentName:"p",href:"https://huggingface.co/docs/hub/index"},"Hugging Face Hub")," is a platform with over 120k models, 20k datasets, and 50k demo apps (Spaces), all open source and publicly available, in an online platform where people can easily collaborate and build ML together."),(0,l.kt)("p",null,"This example showcases how to connect to the Hugging Face Hub."),(0,l.kt)("p",null,"To use, you should have the ",(0,l.kt)("inlineCode",{parentName:"p"},"huggingface_hub")," python ",(0,l.kt)("a",{parentName:"p",href:"https://huggingface.co/docs/huggingface_hub/installation"},"package installed"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pip install huggingface_hub > /dev/null\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# get a token: https://huggingface.co/docs/api-inference/quicktour#get-your-api-token\n\nfrom getpass import getpass\n\nHUGGINGFACEHUB_API_TOKEN = getpass()\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'import os\nos.environ["HUGGINGFACEHUB_API_TOKEN"] = HUGGINGFACEHUB_API_TOKEN\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Select a Model")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'from langchain import HuggingFaceHub\n\nrepo_id = "google/flan-t5-xl" # See https://huggingface.co/models?pipeline_tag=text-generation&sort=downloads for some other options\n\nllm = HuggingFaceHub(repo_id=repo_id, model_kwargs={"temperature":0, "max_length":64})\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'from langchain import PromptTemplate, LLMChain\n\ntemplate = """Question: {question}\n\nAnswer: Let\'s think step by step."""\nprompt = PromptTemplate(template=template, input_variables=["question"])\nllm_chain = LLMChain(prompt=prompt, llm=llm)\n\nquestion = "Who won the FIFA World Cup in the year 1994? "\n\nprint(llm_chain.run(question))\n')),(0,l.kt)("h2",{id:"examples"},"Examples"),(0,l.kt)("p",null,"Below are some examples of models you can access through the Hugging Face Hub integration."),(0,l.kt)("h3",{id:"stablelm-by-stability-ai"},"StableLM, by Stability AI"),(0,l.kt)("p",null,"See ",(0,l.kt)("a",{parentName:"p",href:"https://huggingface.co/stabilityai"},"Stability AI's")," organization page for a list of available models."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'repo_id = "stabilityai/stablelm-tuned-alpha-3b"\n# Others include stabilityai/stablelm-base-alpha-3b\n# as well as 7B parameter versions\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'llm = HuggingFaceHub(repo_id=repo_id, model_kwargs={"temperature":0, "max_length":64})\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# Reuse the prompt and question from above.\nllm_chain = LLMChain(prompt=prompt, llm=llm)\nprint(llm_chain.run(question))\n")),(0,l.kt)("h3",{id:"dolly-by-databricks"},"Dolly, by DataBricks"),(0,l.kt)("p",null,"See ",(0,l.kt)("a",{parentName:"p",href:"https://huggingface.co/databricks"},"DataBricks")," organization page for a list of available models."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'from langchain import HuggingFaceHub\n\nrepo_id = "databricks/dolly-v2-3b"\n\nllm = HuggingFaceHub(repo_id=repo_id, model_kwargs={"temperature":0, "max_length":64})\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# Reuse the prompt and question from above.\nllm_chain = LLMChain(prompt=prompt, llm=llm)\nprint(llm_chain.run(question))\n")),(0,l.kt)("h3",{id:"camel-by-writer"},"Camel, by Writer"),(0,l.kt)("p",null,"See ",(0,l.kt)("a",{parentName:"p",href:"https://huggingface.co/Writer"},"Writer's")," organization page for a list of available models."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'from langchain import HuggingFaceHub\n\nrepo_id = "Writer/camel-5b-hf" # See https://huggingface.co/Writer for other options\nllm = HuggingFaceHub(repo_id=repo_id, model_kwargs={"temperature":0, "max_length":64})\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# Reuse the prompt and question from above.\nllm_chain = LLMChain(prompt=prompt, llm=llm)\nprint(llm_chain.run(question))\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"And many more!")))}u.isMDXComponent=!0}}]);