"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[74046],{3905:(e,t,r)=>{r.d(t,{Zo:()=>i,kt:()=>d});var o=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function m(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=o.createContext({}),s=function(e){var t=o.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},i=function(e){var t=s(e.components);return o.createElement(l.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},f=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,l=e.parentName,i=m(e,["components","mdxType","originalType","parentName"]),c=s(r),f=n,d=c["".concat(l,".").concat(f)]||c[f]||u[f]||a;return r?o.createElement(d,p(p({ref:t},i),{},{components:r})):o.createElement(d,p({ref:t},i))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,p=new Array(a);p[0]=f;var m={};for(var l in t)hasOwnProperty.call(t,l)&&(m[l]=t[l]);m.originalType=e,m[c]="string"==typeof e?e:n,p[1]=m;for(var s=2;s<a;s++)p[s]=r[s];return o.createElement.apply(null,p)}return o.createElement.apply(null,r)}f.displayName="MDXCreateElement"},36483:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>p,default:()=>u,frontMatter:()=>a,metadata:()=>m,toc:()=>s});var o=r(87462),n=(r(67294),r(3905));const a={},p="Template formats",m={unversionedId:"modules/model_io/prompts/prompt_templates/formats",id:"modules/model_io/prompts/prompt_templates/formats",title:"Template formats",description:"By default, PromptTemplate will treat the provided template as a Python f-string. You can specify other template format through template_format argument:",source:"@site/docs/modules/model_io/prompts/prompt_templates/formats.mdx",sourceDirName:"modules/model_io/prompts/prompt_templates",slug:"/modules/model_io/prompts/prompt_templates/formats",permalink:"/langchain-docs-scratch/docs/modules/model_io/prompts/prompt_templates/formats",draft:!1,editUrl:"https://github.com/hwchase17/langchainjs/edit/main/docs/docs/modules/model_io/prompts/prompt_templates/formats.mdx",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Format template output",permalink:"/langchain-docs-scratch/docs/modules/model_io/prompts/prompt_templates/format_output"},next:{title:"Types of MessagePromptTemplate",permalink:"/langchain-docs-scratch/docs/modules/model_io/prompts/prompt_templates/msg_prompt_templates"}},l={},s=[],i={toc:s},c="wrapper";function u(e){let{components:t,...r}=e;return(0,n.kt)(c,(0,o.Z)({},i,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"template-formats"},"Template formats"),(0,n.kt)("p",null,"By default, ",(0,n.kt)("inlineCode",{parentName:"p"},"PromptTemplate")," will treat the provided template as a Python f-string. You can specify other template format through ",(0,n.kt)("inlineCode",{parentName:"p"},"template_format")," argument:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'# Make sure jinja2 is installed before running this\n\njinja2_template = "Tell me a {{ adjective }} joke about {{ content }}"\nprompt_template = PromptTemplate.from_template(template=jinja2_template, template_format="jinja2")\n\nprompt_template.format(adjective="funny", content="chickens")\n# -> Tell me a funny joke about chickens.\n')),(0,n.kt)("p",null,"Currently, ",(0,n.kt)("inlineCode",{parentName:"p"},"PromptTemplate")," only supports ",(0,n.kt)("inlineCode",{parentName:"p"},"jinja2")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"f-string")," templating format. If there is any other templating format that you would like to use, feel free to open an issue in the ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/hwchase17/langchain/issues"},"Github")," page."))}u.isMDXComponent=!0}}]);