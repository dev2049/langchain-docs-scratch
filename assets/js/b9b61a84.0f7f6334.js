"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[47139],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(r),h=o,m=u["".concat(l,".").concat(h)]||u[h]||g[h]||a;return r?n.createElement(m,i(i({ref:t},c),{},{components:r})):n.createElement(m,i({ref:t},c))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},36581:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>g,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var n=r(87462),o=(r(67294),r(3905));const a={},i="Google Serper",s={unversionedId:"ecosystem/integrations/google_serper",id:"ecosystem/integrations/google_serper",title:"Google Serper",description:"This page covers how to use the Serper Google Search API within LangChain. Serper is a low-cost Google Search API that can be used to add answer box, knowledge graph, and organic results data from Google Search.",source:"@site/docs/ecosystem/integrations/google_serper.mdx",sourceDirName:"ecosystem/integrations",slug:"/ecosystem/integrations/google_serper",permalink:"/langchain-docs-scratch/docs/ecosystem/integrations/google_serper",draft:!1,editUrl:"https://github.com/hwchase17/langchainjs/edit/main/docs/docs/ecosystem/integrations/google_serper.mdx",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Google Search",permalink:"/langchain-docs-scratch/docs/ecosystem/integrations/google_search"},next:{title:"GooseAI",permalink:"/langchain-docs-scratch/docs/ecosystem/integrations/gooseai"}},l={},p=[{value:"Setup",id:"setup",level:2},{value:"Wrappers",id:"wrappers",level:2},{value:"Utility",id:"utility",level:3},{value:"Output",id:"output",level:4},{value:"Tool",id:"tool",level:3}],c={toc:p},u="wrapper";function g(e){let{components:t,...r}=e;return(0,o.kt)(u,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"google-serper"},"Google Serper"),(0,o.kt)("p",null,"This page covers how to use the ",(0,o.kt)("a",{parentName:"p",href:"https://serper.dev"},"Serper")," Google Search API within LangChain. Serper is a low-cost Google Search API that can be used to add answer box, knowledge graph, and organic results data from Google Search.\nIt is broken into two parts: setup, and then references to the specific Google Serper wrapper."),(0,o.kt)("h2",{id:"setup"},"Setup"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Go to ",(0,o.kt)("a",{parentName:"li",href:"https://serper.dev"},"serper.dev")," to sign up for a free account"),(0,o.kt)("li",{parentName:"ul"},"Get the api key and set it as an environment variable (",(0,o.kt)("inlineCode",{parentName:"li"},"SERPER_API_KEY"),")")),(0,o.kt)("h2",{id:"wrappers"},"Wrappers"),(0,o.kt)("h3",{id:"utility"},"Utility"),(0,o.kt)("p",null,"There exists a GoogleSerperAPIWrapper utility which wraps this API. To import this utility:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from langchain.utilities import GoogleSerperAPIWrapper\n")),(0,o.kt)("p",null,"You can use it as part of a Self Ask chain:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'from langchain.utilities import GoogleSerperAPIWrapper\nfrom langchain.llms.openai import OpenAI\nfrom langchain.agents import initialize_agent, Tool\nfrom langchain.agents import AgentType\n\nimport os\n\nos.environ["SERPER_API_KEY"] = ""\nos.environ[\'OPENAI_API_KEY\'] = ""\n\nllm = OpenAI(temperature=0)\nsearch = GoogleSerperAPIWrapper()\ntools = [\n    Tool(\n        name="Intermediate Answer",\n        func=search.run,\n        description="useful for when you need to ask with search"\n    )\n]\n\nself_ask_with_search = initialize_agent(tools, llm, agent=AgentType.SELF_ASK_WITH_SEARCH, verbose=True)\nself_ask_with_search.run("What is the hometown of the reigning men\'s U.S. Open champion?")\n')),(0,o.kt)("h4",{id:"output"},"Output"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Entering new AgentExecutor chain...\n Yes.\nFollow up: Who is the reigning men's U.S. Open champion?\nIntermediate answer: Current champions Carlos Alcaraz, 2022 men's singles champion.\nFollow up: Where is Carlos Alcaraz from?\nIntermediate answer: El Palmar, Spain\nSo the final answer is: El Palmar, Spain\n\n> Finished chain.\n\n'El Palmar, Spain'\n")),(0,o.kt)("p",null,"For a more detailed walkthrough of this wrapper, see ",(0,o.kt)("a",{parentName:"p",href:"/docs/modules/agents/tools/examples/google_serper.ipynb"},"this notebook"),"."),(0,o.kt)("h3",{id:"tool"},"Tool"),(0,o.kt)("p",null,"You can also easily load this wrapper as a Tool (to use with an Agent).\nYou can do this with:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'from langchain.agents import load_tools\ntools = load_tools(["google-serper"])\n')),(0,o.kt)("p",null,"For more information on this, see ",(0,o.kt)("a",{parentName:"p",href:"/docs/modules/agents/tools/getting_started.md"},"this page")))}g.isMDXComponent=!0}}]);