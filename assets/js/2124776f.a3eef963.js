"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[30096],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>d});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),l=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(s.Provider,{value:n},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},h=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=l(t),h=o,d=m["".concat(s,".").concat(h)]||m[h]||u[h]||a;return t?r.createElement(d,i(i({ref:n},p),{},{components:t})):r.createElement(d,i({ref:n},p))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=h;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c[m]="string"==typeof e?e:o,i[1]=c;for(var l=2;l<a;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}h.displayName="MDXCreateElement"},72094:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var r=t(87462),o=(t(67294),t(3905));const a={},i="Math chain",c={unversionedId:"modules/chains/integrations/llm_math",id:"modules/chains/integrations/llm_math",title:"Math chain",description:"This notebook showcases using LLMs and Python REPLs to do complex word math problems.",source:"@site/docs/modules/chains/integrations/llm_math.md",sourceDirName:"modules/chains/integrations",slug:"/modules/chains/integrations/llm_math",permalink:"/langchain-docs-scratch/docs/modules/chains/integrations/llm_math",draft:!1,editUrl:"https://github.com/hwchase17/langchainjs/edit/main/docs/docs/modules/chains/integrations/llm_math.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Self-checking chain",permalink:"/langchain-docs-scratch/docs/modules/chains/integrations/llm_checker"},next:{title:"HTTP request chain",permalink:"/langchain-docs-scratch/docs/modules/chains/integrations/llm_requests"}},s={},l=[],p=(m="CodeOutputBlock",function(e){return console.warn("Component "+m+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",e)});var m;const u={toc:l},h="wrapper";function d(e){let{components:n,...t}=e;return(0,o.kt)(h,(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"math-chain"},"Math chain"),(0,o.kt)("p",null,"This notebook showcases using LLMs and Python REPLs to do complex word math problems."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'from langchain import OpenAI, LLMMathChain\n\nllm = OpenAI(temperature=0)\nllm_math = LLMMathChain.from_llm(llm, verbose=True)\n\nllm_math.run("What is 13 raised to the .3432 power?")\n')),(0,o.kt)(p,{lang:"python",mdxType:"CodeOutputBlock"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"    \n    \n    > Entering new LLMMathChain chain...\n    What is 13 raised to the .3432 power?\n    ```text\n    13 ** .3432\n    ```\n    ...numexpr.evaluate(\"13 ** .3432\")...\n    \n    Answer: 2.4116004626599237\n    > Finished chain.\n\n\n\n\n\n    'Answer: 2.4116004626599237'\n"))))}d.isMDXComponent=!0}}]);