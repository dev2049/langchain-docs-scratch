"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6844],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(n),u=o,f=d["".concat(s,".").concat(u)]||d[u]||m[u]||a;return n?r.createElement(f,l(l({ref:t},c),{},{components:n})):r.createElement(f,l({ref:t},c))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=u;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[d]="string"==typeof e?e:o,l[1]=i;for(var p=2;p<a;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},45038:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var r=n(87462),o=(n(67294),n(3905));const a={},l="Modal",i={unversionedId:"ecosystem/integrations/modal",id:"ecosystem/integrations/modal",title:"Modal",description:"This page covers how to use the Modal ecosystem within LangChain.",source:"@site/docs/ecosystem/integrations/modal.mdx",sourceDirName:"ecosystem/integrations",slug:"/ecosystem/integrations/modal",permalink:"/langchain-docs-scratch/docs/ecosystem/integrations/modal",draft:!1,editUrl:"https://github.com/hwchase17/langchainjs/edit/main/docs/docs/ecosystem/integrations/modal.mdx",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"MLflow",permalink:"/langchain-docs-scratch/docs/ecosystem/integrations/mlflow_tracking"},next:{title:"ModelScope",permalink:"/langchain-docs-scratch/docs/ecosystem/integrations/modelscope"}},s={},p=[{value:"Installation and Setup",id:"installation-and-setup",level:2},{value:"Define your Modal Functions and Webhooks",id:"define-your-modal-functions-and-webhooks",level:2},{value:"Wrappers",id:"wrappers",level:2},{value:"LLM",id:"llm",level:3}],c={toc:p},d="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"modal"},"Modal"),(0,o.kt)("p",null,"This page covers how to use the Modal ecosystem within LangChain.\nIt is broken into two parts: installation and setup, and then references to specific Modal wrappers."),(0,o.kt)("h2",{id:"installation-and-setup"},"Installation and Setup"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Install with ",(0,o.kt)("inlineCode",{parentName:"li"},"pip install modal-client")),(0,o.kt)("li",{parentName:"ul"},"Run ",(0,o.kt)("inlineCode",{parentName:"li"},"modal token new"))),(0,o.kt)("h2",{id:"define-your-modal-functions-and-webhooks"},"Define your Modal Functions and Webhooks"),(0,o.kt)("p",null,"You must include a prompt. There is a rigid response structure."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'class Item(BaseModel):\n    prompt: str\n\n@stub.webhook(method="POST")\ndef my_webhook(item: Item):\n    return {"prompt": my_function.call(item.prompt)}\n')),(0,o.kt)("p",null,"An example with GPT2:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'from pydantic import BaseModel\n\nimport modal\n\nstub = modal.Stub("example-get-started")\n\nvolume = modal.SharedVolume().persist("gpt2_model_vol")\nCACHE_PATH = "/root/model_cache"\n\n@stub.function(\n    gpu="any",\n    image=modal.Image.debian_slim().pip_install(\n        "tokenizers", "transformers", "torch", "accelerate"\n    ),\n    shared_volumes={CACHE_PATH: volume},\n    retries=3,\n)\ndef run_gpt2(text: str):\n    from transformers import GPT2Tokenizer, GPT2LMHeadModel\n    tokenizer = GPT2Tokenizer.from_pretrained(\'gpt2\')\n    model = GPT2LMHeadModel.from_pretrained(\'gpt2\')\n    encoded_input = tokenizer(text, return_tensors=\'pt\').input_ids\n    output = model.generate(encoded_input, max_length=50, do_sample=True)\n    return tokenizer.decode(output[0], skip_special_tokens=True)\n\nclass Item(BaseModel):\n    prompt: str\n\n@stub.webhook(method="POST")\ndef get_text(item: Item):\n    return {"prompt": run_gpt2.call(item.prompt)}\n')),(0,o.kt)("h2",{id:"wrappers"},"Wrappers"),(0,o.kt)("h3",{id:"llm"},"LLM"),(0,o.kt)("p",null,"There exists an Modal LLM wrapper, which you can access with "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from langchain.llms import Modal\n")))}m.isMDXComponent=!0}}]);