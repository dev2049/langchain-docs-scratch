"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[72938],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>y});var o=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},s=Object.keys(e);for(o=0;o<s.length;o++)r=s[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)r=s[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=o.createContext({}),m=function(e){var t=o.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=m(e.components);return o.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,s=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),p=m(r),u=n,y=p["".concat(c,".").concat(u)]||p[u]||d[u]||s;return r?o.createElement(y,a(a({ref:t},l),{},{components:r})):o.createElement(y,a({ref:t},l))}));function y(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=r.length,a=new Array(s);a[0]=u;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[p]="string"==typeof e?e:n,a[1]=i;for(var m=2;m<s;m++)a[m]=r[m];return o.createElement.apply(null,a)}return o.createElement.apply(null,r)}u.displayName="MDXCreateElement"},12124:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>y,frontMatter:()=>s,metadata:()=>i,toc:()=>m});var o=r(87462),n=(r(67294),r(3905));const s={},a="Redis Chat Message History",i={unversionedId:"modules/memory/integrations/redis_chat_message_history",id:"modules/memory/integrations/redis_chat_message_history",title:"Redis Chat Message History",description:"This notebook goes over how to use Redis to store chat message history.",source:"@site/docs/modules/memory/integrations/redis_chat_message_history.md",sourceDirName:"modules/memory/integrations",slug:"/modules/memory/integrations/redis_chat_message_history",permalink:"/langchain-docs-scratch/docs/modules/memory/integrations/redis_chat_message_history",draft:!1,editUrl:"https://github.com/hwchase17/langchainjs/edit/main/docs/docs/modules/memory/integrations/redis_chat_message_history.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Postgres Chat Message History",permalink:"/langchain-docs-scratch/docs/modules/memory/integrations/postgres_chat_message_history"},next:{title:"Zep Memory",permalink:"/langchain-docs-scratch/docs/modules/memory/integrations/zep_memory"}},c={},m=[],l=(p="CodeOutputBlock",function(e){return console.warn("Component "+p+" was not imported, exported, or provided by MDXProvider as global scope"),(0,n.kt)("div",e)});var p;const d={toc:m},u="wrapper";function y(e){let{components:t,...r}=e;return(0,n.kt)(u,(0,o.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"redis-chat-message-history"},"Redis Chat Message History"),(0,n.kt)("p",null,"This notebook goes over how to use Redis to store chat message history."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'from langchain.memory import RedisChatMessageHistory\n\nhistory = RedisChatMessageHistory("foo")\n\nhistory.add_user_message("hi!")\n\nhistory.add_ai_message("whats up?")\n')),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"history.messages\n")),(0,n.kt)(l,{lang:"python",mdxType:"CodeOutputBlock"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"    [AIMessage(content='whats up?', additional_kwargs={}),\n     HumanMessage(content='hi!', additional_kwargs={})]\n"))))}y.isMDXComponent=!0}}]);