"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[86398],{3905:(e,t,n)=>{n.d(t,{Zo:()=>g,kt:()=>m});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=o.createContext({}),c=function(e){var t=o.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},g=function(e){var t=c(e.components);return o.createElement(i.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,g=s(e,["components","mdxType","originalType","parentName"]),u=c(n),d=r,m=u["".concat(i,".").concat(d)]||u[d]||p[d]||a;return n?o.createElement(m,l(l({ref:t},g),{},{components:n})):o.createElement(m,l({ref:t},g))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[u]="string"==typeof e?e:r,l[1]=s;for(var c=2;c<a;c++)l[c]=n[c];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},97102:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var o=n(87462),r=(n(67294),n(3905));const a={},l=void 0,s={unversionedId:"modules/agents/tools/integrations/huggingface_tools",id:"modules/agents/tools/integrations/huggingface_tools",title:"huggingface_tools",description:"HuggingFace Tools",source:"@site/docs/modules/agents/tools/integrations/huggingface_tools.md",sourceDirName:"modules/agents/tools/integrations",slug:"/modules/agents/tools/integrations/huggingface_tools",permalink:"/langchain-docs-scratch/docs/modules/agents/tools/integrations/huggingface_tools",draft:!1,editUrl:"https://github.com/hwchase17/langchainjs/edit/main/docs/docs/modules/agents/tools/integrations/huggingface_tools.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"GraphQL tool",permalink:"/langchain-docs-scratch/docs/modules/agents/tools/integrations/graphql"},next:{title:"Human as a tool",permalink:"/langchain-docs-scratch/docs/modules/agents/tools/integrations/human_tools"}},i={},c=[{value:"HuggingFace Tools",id:"huggingface-tools",level:2}],g=(u="CodeOutputBlock",function(e){return console.warn("Component "+u+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",e)});var u;const p={toc:c},d="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"huggingface-tools"},"HuggingFace Tools"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://huggingface.co/docs/transformers/v4.29.0/en/custom_tools"},"Huggingface Tools")," supporting text I/O can be\nloaded directly using the ",(0,r.kt)("inlineCode",{parentName:"p"},"load_huggingface_tool")," function."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Requires transformers>=4.29.0 and huggingface_hub>=0.14.1\npip install --upgrade transformers huggingface_hub > /dev/null\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'from langchain.agents import load_huggingface_tool\n\ntool = load_huggingface_tool("lysandre/hf-model-downloads")\n\nprint(f"{tool.name}: {tool.description}")\n')),(0,r.kt)(g,{lang:"python",mdxType:"CodeOutputBlock"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"    model_download_counter: This is a tool that returns the most downloaded model of a given task on the Hugging Face Hub. It takes the name of the category (such as text-classification, depth-estimation, etc), and returns the name of the checkpoint\n"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'tool.run("text-classification")\n')),(0,r.kt)(g,{lang:"python",mdxType:"CodeOutputBlock"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"    'facebook/bart-large-mnli'\n"))))}m.isMDXComponent=!0}}]);