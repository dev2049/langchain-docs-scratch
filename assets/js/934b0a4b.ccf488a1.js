"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[13593],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>d});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},h="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),h=l(t),m=a,d=h["".concat(c,".").concat(m)]||h[m]||u[m]||o;return t?r.createElement(d,s(s({ref:n},p),{},{components:t})):r.createElement(d,s({ref:n},p))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=m;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i[h]="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=t[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},79863:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var r=t(87462),a=(t(67294),t(3905));const o={},s="Self Ask With Search",i={unversionedId:"modules/agents/agents/how_to/self_ask_with_search",id:"modules/agents/agents/how_to/self_ask_with_search",title:"Self Ask With Search",description:"This notebook showcases the Self Ask With Search chain.",source:"@site/docs/modules/agents/agents/how_to/self_ask_with_search.md",sourceDirName:"modules/agents/agents/how_to",slug:"/modules/agents/agents/how_to/self_ask_with_search",permalink:"/langchain-docs-scratch/docs/modules/agents/agents/how_to/self_ask_with_search",draft:!1,editUrl:"https://github.com/hwchase17/langchainjs/edit/main/docs/docs/modules/agents/agents/how_to/self_ask_with_search.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"ReAct",permalink:"/langchain-docs-scratch/docs/modules/agents/agents/how_to/react"},next:{title:"How to add SharedMemory to an Agent and its Tools",permalink:"/langchain-docs-scratch/docs/modules/agents/agents/how_to/sharedmemory_for_tools"}},c={},l=[],p=(h="CodeOutputBlock",function(e){return console.warn("Component "+h+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",e)});var h;const u={toc:l},m="wrapper";function d(e){let{components:n,...t}=e;return(0,a.kt)(m,(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"self-ask-with-search"},"Self Ask With Search"),(0,a.kt)("p",null,"This notebook showcases the Self Ask With Search chain."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'from langchain import OpenAI, SerpAPIWrapper\nfrom langchain.agents import initialize_agent, Tool\nfrom langchain.agents import AgentType\n\nllm = OpenAI(temperature=0)\nsearch = SerpAPIWrapper()\ntools = [\n    Tool(\n        name="Intermediate Answer",\n        func=search.run,\n        description="useful for when you need to ask with search"\n    )\n]\n\nself_ask_with_search = initialize_agent(tools, llm, agent=AgentType.SELF_ASK_WITH_SEARCH, verbose=True)\nself_ask_with_search.run("What is the hometown of the reigning men\'s U.S. Open champion?")\n')),(0,a.kt)(p,{lang:"python",mdxType:"CodeOutputBlock"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"    \n    \n    > Entering new AgentExecutor chain...\n     Yes.\n    Follow up: Who is the reigning men's U.S. Open champion?\n    Intermediate answer: Carlos Alcaraz Garfia\n    Follow up: Where is Carlos Alcaraz Garfia from?\n    Intermediate answer: El Palmar, Spain\n    So the final answer is: El Palmar, Spain\n    \n    > Finished chain.\n\n\n\n\n\n    'El Palmar, Spain'\n"))))}d.isMDXComponent=!0}}]);