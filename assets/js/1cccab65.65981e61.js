"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[90987],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=c(n),g=r,f=m["".concat(s,".").concat(g)]||m[g]||u[g]||l;return n?a.createElement(f,o(o({ref:t},p),{},{components:n})):a.createElement(f,o({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=g;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[m]="string"==typeof e?e:r,o[1]=i;for(var c=2;c<l;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},32026:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const l={},o="MLflow",i={unversionedId:"ecosystem/integrations/mlflow_tracking",id:"ecosystem/integrations/mlflow_tracking",title:"MLflow",description:"This notebook goes over how to track your LangChain experiments into your MLflow Server",source:"@site/docs/ecosystem/integrations/mlflow_tracking.md",sourceDirName:"ecosystem/integrations",slug:"/ecosystem/integrations/mlflow_tracking",permalink:"/langchain-docs-scratch/docs/ecosystem/integrations/mlflow_tracking",draft:!1,editUrl:"https://github.com/hwchase17/langchainjs/edit/main/docs/docs/ecosystem/integrations/mlflow_tracking.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Milvus",permalink:"/langchain-docs-scratch/docs/ecosystem/integrations/milvus"},next:{title:"Modal",permalink:"/langchain-docs-scratch/docs/ecosystem/integrations/modal"}},s={},c=[],p={toc:c},m="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"mlflow"},"MLflow"),(0,r.kt)("p",null,"This notebook goes over how to track your LangChain experiments into your MLflow Server"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pip install azureml-mlflow\npip install pandas\npip install textstat\npip install spacy\npip install openai\npip install google-search-results\npython -m spacy download en_core_web_sm\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'import os\nos.environ["MLFLOW_TRACKING_URI"] = ""\nos.environ["OPENAI_API_KEY"] = ""\nos.environ["SERPAPI_API_KEY"] = ""\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from langchain.callbacks import MlflowCallbackHandler\nfrom langchain.llms import OpenAI\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'"""Main function.\n\nThis function is used to try the callback handler.\nScenarios:\n1. OpenAI LLM\n2. Chain with multiple SubChains on multiple generations\n3. Agent with Tools\n"""\nmlflow_callback = MlflowCallbackHandler()\nllm = OpenAI(model_name="gpt-3.5-turbo", temperature=0, callbacks=[mlflow_callback], verbose=True)\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'# SCENARIO 1 - LLM\nllm_result = llm.generate(["Tell me a joke"])\n\nmlflow_callback.flush_tracker(llm)\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from langchain.prompts import PromptTemplate\nfrom langchain.chains import LLMChain\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'# SCENARIO 2 - Chain\ntemplate = """You are a playwright. Given the title of play, it is your job to write a synopsis for that title.\nTitle: {title}\nPlaywright: This is a synopsis for the above play:"""\nprompt_template = PromptTemplate(input_variables=["title"], template=template)\nsynopsis_chain = LLMChain(llm=llm, prompt=prompt_template, callbacks=[mlflow_callback])\n\ntest_prompts = [\n    {\n        "title": "documentary about good video games that push the boundary of game design"\n    },\n]\nsynopsis_chain.apply(test_prompts)\nmlflow_callback.flush_tracker(synopsis_chain)\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from langchain.agents import initialize_agent, load_tools\nfrom langchain.agents import AgentType\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'# SCENARIO 3 - Agent with Tools\ntools = load_tools(["serpapi", "llm-math"], llm=llm, callbacks=[mlflow_callback])\nagent = initialize_agent(\n    tools,\n    llm,\n    agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION,\n    callbacks=[mlflow_callback],\n    verbose=True,\n)\nagent.run(\n    "Who is Leo DiCaprio\'s girlfriend? What is her current age raised to the 0.43 power?"\n)\nmlflow_callback.flush_tracker(agent, finish=True)\n')))}u.isMDXComponent=!0}}]);