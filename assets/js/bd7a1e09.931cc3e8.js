"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[20942],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),l=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(i.Provider,{value:t},e.children)},h="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),h=l(n),m=a,d=h["".concat(i,".").concat(m)]||h[m]||u[m]||o;return n?r.createElement(d,s(s({ref:t},p),{},{components:n})):r.createElement(d,s({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=m;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c[h]="string"==typeof e?e:a,s[1]=c;for(var l=2;l<o;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},78985:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var r=n(87462),a=(n(67294),n(3905));const o={},s="Self ask with search",c={unversionedId:"modules/agents/agent_types/self_ask_with_search",id:"modules/agents/agent_types/self_ask_with_search",title:"Self ask with search",description:"This walkthrough showcases the Self Ask With Search chain.",source:"@site/docs/modules/agents/agent_types/self_ask_with_search.md",sourceDirName:"modules/agents/agent_types",slug:"/modules/agents/agent_types/self_ask_with_search",permalink:"/langchain-docs-scratch/docs/modules/agents/agent_types/self_ask_with_search",draft:!1,editUrl:"https://github.com/hwchase17/langchainjs/edit/main/docs/docs/modules/agents/agent_types/self_ask_with_search.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"ReAct document store",permalink:"/langchain-docs-scratch/docs/modules/agents/agent_types/react_docstore"},next:{title:"Combine agents and vector stores",permalink:"/langchain-docs-scratch/docs/modules/agents/how_to/agent_vectorstore"}},i={},l=[],p=(h="CodeOutputBlock",function(e){return console.warn("Component "+h+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",e)});var h;const u={toc:l},m="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"self-ask-with-search"},"Self ask with search"),(0,a.kt)("p",null,"This walkthrough showcases the Self Ask With Search chain."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'from langchain import OpenAI, SerpAPIWrapper\nfrom langchain.agents import initialize_agent, Tool\nfrom langchain.agents import AgentType\n\nllm = OpenAI(temperature=0)\nsearch = SerpAPIWrapper()\ntools = [\n    Tool(\n        name="Intermediate Answer",\n        func=search.run,\n        description="useful for when you need to ask with search"\n    )\n]\n\nself_ask_with_search = initialize_agent(tools, llm, agent=AgentType.SELF_ASK_WITH_SEARCH, verbose=True)\nself_ask_with_search.run("What is the hometown of the reigning men\'s U.S. Open champion?")\n')),(0,a.kt)(p,{lang:"python",mdxType:"CodeOutputBlock"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"    \n    \n    > Entering new AgentExecutor chain...\n     Yes.\n    Follow up: Who is the reigning men's U.S. Open champion?\n    Intermediate answer: Carlos Alcaraz Garfia\n    Follow up: Where is Carlos Alcaraz Garfia from?\n    Intermediate answer: El Palmar, Spain\n    So the final answer is: El Palmar, Spain\n    \n    > Finished chain.\n\n\n\n\n\n    'El Palmar, Spain'\n"))))}d.isMDXComponent=!0}}]);