"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[68893],{3905:(e,n,i)=>{i.d(n,{Zo:()=>c,kt:()=>f});var t=i(67294);function a(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}function h(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,t)}return i}function s(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?h(Object(i),!0).forEach((function(n){a(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):h(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}function r(e,n){if(null==e)return{};var i,t,a=function(e,n){if(null==e)return{};var i,t,a={},h=Object.keys(e);for(t=0;t<h.length;t++)i=h[t],n.indexOf(i)>=0||(a[i]=e[i]);return a}(e,n);if(Object.getOwnPropertySymbols){var h=Object.getOwnPropertySymbols(e);for(t=0;t<h.length;t++)i=h[t],n.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(a[i]=e[i])}return a}var o=t.createContext({}),l=function(e){var n=t.useContext(o),i=n;return e&&(i="function"==typeof e?e(n):s(s({},n),e)),i},c=function(e){var n=l(e.components);return t.createElement(o.Provider,{value:n},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var i=e.components,a=e.mdxType,h=e.originalType,o=e.parentName,c=r(e,["components","mdxType","originalType","parentName"]),d=l(i),u=a,f=d["".concat(o,".").concat(u)]||d[u]||p[u]||h;return i?t.createElement(f,s(s({ref:n},c),{},{components:i})):t.createElement(f,s({ref:n},c))}));function f(e,n){var i=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var h=i.length,s=new Array(h);s[0]=u;var r={};for(var o in n)hasOwnProperty.call(n,o)&&(r[o]=n[o]);r.originalType=e,r[d]="string"==typeof e?e:a,s[1]=r;for(var l=2;l<h;l++)s[l]=i[l];return t.createElement.apply(null,s)}return t.createElement.apply(null,i)}u.displayName="MDXCreateElement"},78408:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>f,frontMatter:()=>h,metadata:()=>r,toc:()=>l});var t=i(87462),a=(i(67294),i(3905));const h={},s="Use LangChain, GPT and Deep Lake to work with code base",r={unversionedId:"use_cases/code/code-analysis-deeplake",id:"use_cases/code/code-analysis-deeplake",title:"Use LangChain, GPT and Deep Lake to work with code base",description:"In this tutorial, we are going to use Langchain + Deep Lake with GPT to analyze the code base of the LangChain itself.",source:"@site/docs/use_cases/code/code-analysis-deeplake.md",sourceDirName:"use_cases/code",slug:"/use_cases/code/code-analysis-deeplake",permalink:"/langchain-docs-scratch/docs/use_cases/code/code-analysis-deeplake",draft:!1,editUrl:"https://github.com/hwchase17/langchainjs/edit/main/docs/docs/use_cases/code/code-analysis-deeplake.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Code Understanding",permalink:"/langchain-docs-scratch/docs/use_cases/code/"},next:{title:"Analysis of Twitter the-algorithm source code with LangChain, GPT4 and Deep Lake",permalink:"/langchain-docs-scratch/docs/use_cases/code/twitter-the-algorithm-analysis-deeplake"}},o={},l=[{value:"Design",id:"design",level:2},{value:"Implementation",id:"implementation",level:2},{value:"Integration preparations",id:"integration-preparations",level:3},{value:"Prepare data",id:"prepare-data",level:3},{value:"Question Answering",id:"question-answering",level:3}],c=(d="CodeOutputBlock",function(e){return console.warn("Component "+d+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",e)});var d;const p={toc:l},u="wrapper";function f(e){let{components:n,...i}=e;return(0,a.kt)(u,(0,t.Z)({},p,i,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"use-langchain-gpt-and-deep-lake-to-work-with-code-base"},"Use LangChain, GPT and Deep Lake to work with code base"),(0,a.kt)("p",null,"In this tutorial, we are going to use Langchain + Deep Lake with GPT to analyze the code base of the LangChain itself. "),(0,a.kt)("h2",{id:"design"},"Design"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Prepare data:",(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},"Upload all python project files using the ",(0,a.kt)("inlineCode",{parentName:"li"},"langchain.document_loaders.TextLoader"),". We will call these files the ",(0,a.kt)("strong",{parentName:"li"},"documents"),"."),(0,a.kt)("li",{parentName:"ol"},"Split all documents to chunks using the ",(0,a.kt)("inlineCode",{parentName:"li"},"langchain.text_splitter.CharacterTextSplitter"),"."),(0,a.kt)("li",{parentName:"ol"},"Embed chunks and upload them into the DeepLake using ",(0,a.kt)("inlineCode",{parentName:"li"},"langchain.embeddings.openai.OpenAIEmbeddings")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"langchain.vectorstores.DeepLake")))),(0,a.kt)("li",{parentName:"ol"},"Question-Answering:",(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},"Build a chain from ",(0,a.kt)("inlineCode",{parentName:"li"},"langchain.chat_models.ChatOpenAI")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"langchain.chains.ConversationalRetrievalChain")),(0,a.kt)("li",{parentName:"ol"},"Prepare questions."),(0,a.kt)("li",{parentName:"ol"},"Get answers running the chain.")))),(0,a.kt)("h2",{id:"implementation"},"Implementation"),(0,a.kt)("h3",{id:"integration-preparations"},"Integration preparations"),(0,a.kt)("p",null,"We need to set up keys for external services and install necessary python libraries."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"#!python3 -m pip install --upgrade langchain deeplake openai\n")),(0,a.kt)("p",null,"Set up OpenAI embeddings, Deep Lake multi-modal vector store api and authenticate. "),(0,a.kt)("p",null,"For full documentation of Deep Lake please follow ",(0,a.kt)("a",{parentName:"p",href:"https://docs.activeloop.ai/"},"https://docs.activeloop.ai/")," and API reference ",(0,a.kt)("a",{parentName:"p",href:"https://docs.deeplake.ai/en/latest/"},"https://docs.deeplake.ai/en/latest/")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"import os\nfrom getpass import getpass\n\nos.environ['OPENAI_API_KEY'] = getpass()\n# Please manually enter OpenAI Key\n")),(0,a.kt)(c,{lang:"python",mdxType:"CodeOutputBlock"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"     \xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\n"))),(0,a.kt)("p",null,"Authenticate into Deep Lake if you want to create your own dataset and publish it. You can get an API key from the platform at ",(0,a.kt)("a",{parentName:"p",href:"https://app.activeloop.ai"},"app.activeloop.ai")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"os.environ['ACTIVELOOP_TOKEN'] = getpass.getpass('Activeloop Token:')\n")),(0,a.kt)(c,{lang:"python",mdxType:"CodeOutputBlock"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"     \xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\n"))),(0,a.kt)("h3",{id:"prepare-data"},"Prepare data"),(0,a.kt)("p",null,"Load all repository files. Here we assume this notebook is downloaded as the part of the langchain fork and we work with the python files of the ",(0,a.kt)("inlineCode",{parentName:"p"},"langchain")," repo."),(0,a.kt)("p",null,"If you want to use files from different repo, change ",(0,a.kt)("inlineCode",{parentName:"p"},"root_dir")," to the root dir of your repo."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"from langchain.document_loaders import TextLoader\n\nroot_dir = '../../../..'\n\ndocs = []\nfor dirpath, dirnames, filenames in os.walk(root_dir):\n    for file in filenames:\n        if file.endswith('.py') and '/.venv/' not in dirpath:\n            try: \n                loader = TextLoader(os.path.join(dirpath, file), encoding='utf-8')\n                docs.extend(loader.load_and_split())\n            except Exception as e: \n                pass\nprint(f'{len(docs)}')\n")),(0,a.kt)(c,{lang:"python",mdxType:"CodeOutputBlock"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"    1147\n"))),(0,a.kt)("p",null,"Then, chunk the files"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'from langchain.text_splitter import CharacterTextSplitter\n\ntext_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=0)\ntexts = text_splitter.split_documents(docs)\nprint(f"{len(texts)}")\n')),(0,a.kt)(c,{lang:"python",mdxType:"CodeOutputBlock"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"    Created a chunk of size 1620, which is longer than the specified 1000\n    Created a chunk of size 1213, which is longer than the specified 1000\n    Created a chunk of size 1263, which is longer than the specified 1000\n    Created a chunk of size 1448, which is longer than the specified 1000\n    Created a chunk of size 1120, which is longer than the specified 1000\n    Created a chunk of size 1148, which is longer than the specified 1000\n    Created a chunk of size 1826, which is longer than the specified 1000\n    Created a chunk of size 1260, which is longer than the specified 1000\n    Created a chunk of size 1195, which is longer than the specified 1000\n    Created a chunk of size 2147, which is longer than the specified 1000\n    Created a chunk of size 1410, which is longer than the specified 1000\n    Created a chunk of size 1269, which is longer than the specified 1000\n    Created a chunk of size 1030, which is longer than the specified 1000\n    Created a chunk of size 1046, which is longer than the specified 1000\n    Created a chunk of size 1024, which is longer than the specified 1000\n    Created a chunk of size 1026, which is longer than the specified 1000\n    Created a chunk of size 1285, which is longer than the specified 1000\n    Created a chunk of size 1370, which is longer than the specified 1000\n    Created a chunk of size 1031, which is longer than the specified 1000\n    Created a chunk of size 1999, which is longer than the specified 1000\n    Created a chunk of size 1029, which is longer than the specified 1000\n    Created a chunk of size 1120, which is longer than the specified 1000\n    Created a chunk of size 1033, which is longer than the specified 1000\n    Created a chunk of size 1143, which is longer than the specified 1000\n    Created a chunk of size 1416, which is longer than the specified 1000\n    Created a chunk of size 2482, which is longer than the specified 1000\n    Created a chunk of size 1890, which is longer than the specified 1000\n    Created a chunk of size 1418, which is longer than the specified 1000\n    Created a chunk of size 1848, which is longer than the specified 1000\n    Created a chunk of size 1069, which is longer than the specified 1000\n    Created a chunk of size 2369, which is longer than the specified 1000\n    Created a chunk of size 1045, which is longer than the specified 1000\n    Created a chunk of size 1501, which is longer than the specified 1000\n    Created a chunk of size 1208, which is longer than the specified 1000\n    Created a chunk of size 1950, which is longer than the specified 1000\n    Created a chunk of size 1283, which is longer than the specified 1000\n    Created a chunk of size 1414, which is longer than the specified 1000\n    Created a chunk of size 1304, which is longer than the specified 1000\n    Created a chunk of size 1224, which is longer than the specified 1000\n    Created a chunk of size 1060, which is longer than the specified 1000\n    Created a chunk of size 2461, which is longer than the specified 1000\n    Created a chunk of size 1099, which is longer than the specified 1000\n    Created a chunk of size 1178, which is longer than the specified 1000\n    Created a chunk of size 1449, which is longer than the specified 1000\n    Created a chunk of size 1345, which is longer than the specified 1000\n    Created a chunk of size 3359, which is longer than the specified 1000\n    Created a chunk of size 2248, which is longer than the specified 1000\n    Created a chunk of size 1589, which is longer than the specified 1000\n    Created a chunk of size 2104, which is longer than the specified 1000\n    Created a chunk of size 1505, which is longer than the specified 1000\n    Created a chunk of size 1387, which is longer than the specified 1000\n    Created a chunk of size 1215, which is longer than the specified 1000\n    Created a chunk of size 1240, which is longer than the specified 1000\n    Created a chunk of size 1635, which is longer than the specified 1000\n    Created a chunk of size 1075, which is longer than the specified 1000\n    Created a chunk of size 2180, which is longer than the specified 1000\n    Created a chunk of size 1791, which is longer than the specified 1000\n    Created a chunk of size 1555, which is longer than the specified 1000\n    Created a chunk of size 1082, which is longer than the specified 1000\n    Created a chunk of size 1225, which is longer than the specified 1000\n    Created a chunk of size 1287, which is longer than the specified 1000\n    Created a chunk of size 1085, which is longer than the specified 1000\n    Created a chunk of size 1117, which is longer than the specified 1000\n    Created a chunk of size 1966, which is longer than the specified 1000\n    Created a chunk of size 1150, which is longer than the specified 1000\n    Created a chunk of size 1285, which is longer than the specified 1000\n    Created a chunk of size 1150, which is longer than the specified 1000\n    Created a chunk of size 1585, which is longer than the specified 1000\n    Created a chunk of size 1208, which is longer than the specified 1000\n    Created a chunk of size 1267, which is longer than the specified 1000\n    Created a chunk of size 1542, which is longer than the specified 1000\n    Created a chunk of size 1183, which is longer than the specified 1000\n    Created a chunk of size 2424, which is longer than the specified 1000\n    Created a chunk of size 1017, which is longer than the specified 1000\n    Created a chunk of size 1304, which is longer than the specified 1000\n    Created a chunk of size 1379, which is longer than the specified 1000\n    Created a chunk of size 1324, which is longer than the specified 1000\n    Created a chunk of size 1205, which is longer than the specified 1000\n    Created a chunk of size 1056, which is longer than the specified 1000\n    Created a chunk of size 1195, which is longer than the specified 1000\n    Created a chunk of size 3608, which is longer than the specified 1000\n    Created a chunk of size 1058, which is longer than the specified 1000\n    Created a chunk of size 1075, which is longer than the specified 1000\n    Created a chunk of size 1217, which is longer than the specified 1000\n    Created a chunk of size 1109, which is longer than the specified 1000\n    Created a chunk of size 1440, which is longer than the specified 1000\n    Created a chunk of size 1046, which is longer than the specified 1000\n    Created a chunk of size 1220, which is longer than the specified 1000\n    Created a chunk of size 1403, which is longer than the specified 1000\n    Created a chunk of size 1241, which is longer than the specified 1000\n    Created a chunk of size 1427, which is longer than the specified 1000\n    Created a chunk of size 1049, which is longer than the specified 1000\n    Created a chunk of size 1580, which is longer than the specified 1000\n    Created a chunk of size 1565, which is longer than the specified 1000\n    Created a chunk of size 1131, which is longer than the specified 1000\n    Created a chunk of size 1425, which is longer than the specified 1000\n    Created a chunk of size 1054, which is longer than the specified 1000\n    Created a chunk of size 1027, which is longer than the specified 1000\n    Created a chunk of size 2559, which is longer than the specified 1000\n    Created a chunk of size 1028, which is longer than the specified 1000\n    Created a chunk of size 1382, which is longer than the specified 1000\n    Created a chunk of size 1888, which is longer than the specified 1000\n    Created a chunk of size 1475, which is longer than the specified 1000\n    Created a chunk of size 1652, which is longer than the specified 1000\n    Created a chunk of size 1891, which is longer than the specified 1000\n    Created a chunk of size 1899, which is longer than the specified 1000\n    Created a chunk of size 1021, which is longer than the specified 1000\n    Created a chunk of size 1085, which is longer than the specified 1000\n    Created a chunk of size 1854, which is longer than the specified 1000\n    Created a chunk of size 1672, which is longer than the specified 1000\n    Created a chunk of size 2537, which is longer than the specified 1000\n    Created a chunk of size 1251, which is longer than the specified 1000\n    Created a chunk of size 1734, which is longer than the specified 1000\n    Created a chunk of size 1642, which is longer than the specified 1000\n    Created a chunk of size 1376, which is longer than the specified 1000\n    Created a chunk of size 1253, which is longer than the specified 1000\n    Created a chunk of size 1642, which is longer than the specified 1000\n    Created a chunk of size 1419, which is longer than the specified 1000\n    Created a chunk of size 1438, which is longer than the specified 1000\n    Created a chunk of size 1427, which is longer than the specified 1000\n    Created a chunk of size 1684, which is longer than the specified 1000\n    Created a chunk of size 1760, which is longer than the specified 1000\n    Created a chunk of size 1157, which is longer than the specified 1000\n    Created a chunk of size 2504, which is longer than the specified 1000\n    Created a chunk of size 1082, which is longer than the specified 1000\n    Created a chunk of size 2268, which is longer than the specified 1000\n    Created a chunk of size 1784, which is longer than the specified 1000\n    Created a chunk of size 1311, which is longer than the specified 1000\n    Created a chunk of size 2972, which is longer than the specified 1000\n    Created a chunk of size 1144, which is longer than the specified 1000\n    Created a chunk of size 1825, which is longer than the specified 1000\n    Created a chunk of size 1508, which is longer than the specified 1000\n    Created a chunk of size 2901, which is longer than the specified 1000\n    Created a chunk of size 1715, which is longer than the specified 1000\n    Created a chunk of size 1062, which is longer than the specified 1000\n    Created a chunk of size 1206, which is longer than the specified 1000\n    Created a chunk of size 1102, which is longer than the specified 1000\n    Created a chunk of size 1184, which is longer than the specified 1000\n    Created a chunk of size 1002, which is longer than the specified 1000\n    Created a chunk of size 1065, which is longer than the specified 1000\n    Created a chunk of size 1871, which is longer than the specified 1000\n    Created a chunk of size 1754, which is longer than the specified 1000\n    Created a chunk of size 2413, which is longer than the specified 1000\n    Created a chunk of size 1771, which is longer than the specified 1000\n    Created a chunk of size 2054, which is longer than the specified 1000\n    Created a chunk of size 2000, which is longer than the specified 1000\n    Created a chunk of size 2061, which is longer than the specified 1000\n    Created a chunk of size 1066, which is longer than the specified 1000\n    Created a chunk of size 1419, which is longer than the specified 1000\n    Created a chunk of size 1368, which is longer than the specified 1000\n    Created a chunk of size 1008, which is longer than the specified 1000\n    Created a chunk of size 1227, which is longer than the specified 1000\n    Created a chunk of size 1745, which is longer than the specified 1000\n    Created a chunk of size 2296, which is longer than the specified 1000\n    Created a chunk of size 1083, which is longer than the specified 1000\n\n\n    3477\n"))),(0,a.kt)("p",null,"Then embed chunks and upload them to the DeepLake."),(0,a.kt)("p",null,"This can take several minutes. "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"from langchain.embeddings.openai import OpenAIEmbeddings\n\nembeddings = OpenAIEmbeddings()\nembeddings\n")),(0,a.kt)(c,{lang:"python",mdxType:"CodeOutputBlock"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"    OpenAIEmbeddings(client=<class 'openai.api_resources.embedding.Embedding'>, model='text-embedding-ada-002', document_model_name='text-embedding-ada-002', query_model_name='text-embedding-ada-002', embedding_ctx_length=8191, openai_api_key=None, openai_organization=None, allowed_special=set(), disallowed_special='all', chunk_size=1000, max_retries=6)\n"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'from langchain.vectorstores import DeepLake\n\ndb = DeepLake.from_documents(texts, embeddings, dataset_path=f"hub://{DEEPLAKE_ACCOUNT_NAME}/langchain-code")\ndb\n')),(0,a.kt)("h3",{id:"question-answering"},"Question Answering"),(0,a.kt)("p",null,"First load the dataset, construct the retriever, then construct the Conversational Chain"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'db = DeepLake(dataset_path=f"hub://{DEEPLAKE_ACCOUNT_NAME}/langchain-code", read_only=True, embedding_function=embeddings)\n')),(0,a.kt)(c,{lang:"python",mdxType:"CodeOutputBlock"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"    -\n\n    This dataset can be visualized in Jupyter Notebook by ds.visualize() or at https://app.activeloop.ai/user_name/langchain-code\n    \n\n\n    /\n\n    hub://user_name/langchain-code loaded successfully.\n    \n\n\n    Deep Lake Dataset in hub://user_name/langchain-code already exists, loading from the storage\n\n\n    Dataset(path='hub://user_name/langchain-code', read_only=True, tensors=['embedding', 'ids', 'metadata', 'text'])\n    \n      tensor     htype      shape       dtype  compression\n      -------   -------    -------     -------  ------- \n     embedding  generic  (3477, 1536)  float32   None   \n        ids      text     (3477, 1)      str     None   \n     metadata    json     (3477, 1)      str     None   \n       text      text     (3477, 1)      str     None   \n"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"retriever = db.as_retriever()\nretriever.search_kwargs['distance_metric'] = 'cos'\nretriever.search_kwargs['fetch_k'] = 20\nretriever.search_kwargs['maximal_marginal_relevance'] = True\nretriever.search_kwargs['k'] = 20\n")),(0,a.kt)("p",null,"You can also specify user defined functions using ",(0,a.kt)("a",{parentName:"p",href:"https://docs.deeplake.ai/en/latest/deeplake.core.dataset.html#deeplake.core.dataset.Dataset.filter"},"Deep Lake filters")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def filter(x):\n    # filter based on source code\n    if 'something' in x['text'].data()['value']:\n        return False\n    \n    # filter based on path e.g. extension\n    metadata =  x['metadata'].data()['value']\n    return 'only_this' in metadata['source'] or 'also_that' in metadata['source']\n\n### turn on below for custom filtering\n# retriever.search_kwargs['filter'] = filter\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"from langchain.chat_models import ChatOpenAI\nfrom langchain.chains import ConversationalRetrievalChain\n\nmodel = ChatOpenAI(model_name='gpt-3.5-turbo') # 'ada' 'gpt-3.5-turbo' 'gpt-4',\nqa = ConversationalRetrievalChain.from_llm(model,retriever=retriever)\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'questions = [\n    "What is the class hierarchy?",\n    # "What classes are derived from the Chain class?",\n    # "What classes and functions in the ./langchain/utilities/ forlder are not covered by unit tests?",\n    # "What one improvement do you propose in code in relation to the class herarchy for the Chain class?",\n] \nchat_history = []\n\nfor question in questions:  \n    result = qa({"question": question, "chat_history": chat_history})\n    chat_history.append((question, result[\'answer\']))\n    print(f"-> **Question**: {question} \\n")\n    print(f"**Answer**: {result[\'answer\']} \\n")\n')),(0,a.kt)("p",null,"-> ",(0,a.kt)("strong",{parentName:"p"},"Question"),": What is the class hierarchy? "),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Answer"),": There are several class hierarchies in the provided code, so I'll list a few:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"BaseModel")," -> ",(0,a.kt)("inlineCode",{parentName:"li"},"ConstitutionalPrinciple"),": ",(0,a.kt)("inlineCode",{parentName:"li"},"ConstitutionalPrinciple")," is a subclass of ",(0,a.kt)("inlineCode",{parentName:"li"},"BaseModel"),"."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"BasePromptTemplate")," -> ",(0,a.kt)("inlineCode",{parentName:"li"},"StringPromptTemplate"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"AIMessagePromptTemplate"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"BaseChatPromptTemplate"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"ChatMessagePromptTemplate"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"ChatPromptTemplate"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"HumanMessagePromptTemplate"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"MessagesPlaceholder"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"SystemMessagePromptTemplate"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"FewShotPromptTemplate"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"FewShotPromptWithTemplates"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"Prompt"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"PromptTemplate"),": All of these classes are subclasses of ",(0,a.kt)("inlineCode",{parentName:"li"},"BasePromptTemplate"),"."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"APIChain"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"Chain"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"MapReduceDocumentsChain"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"MapRerankDocumentsChain"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"RefineDocumentsChain"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"StuffDocumentsChain"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"HypotheticalDocumentEmbedder"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"LLMChain"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"LLMBashChain"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"LLMCheckerChain"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"LLMMathChain"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"LLMRequestsChain"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"PALChain"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"QAWithSourcesChain"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"VectorDBQAWithSourcesChain"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"VectorDBQA"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"SQLDatabaseChain"),": All of these classes are subclasses of ",(0,a.kt)("inlineCode",{parentName:"li"},"Chain"),"."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"BaseLoader"),": ",(0,a.kt)("inlineCode",{parentName:"li"},"BaseLoader")," is a subclass of ",(0,a.kt)("inlineCode",{parentName:"li"},"ABC"),"."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"BaseTracer")," -> ",(0,a.kt)("inlineCode",{parentName:"li"},"ChainRun"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"LLMRun"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"SharedTracer"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"ToolRun"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"Tracer"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"TracerException"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"TracerSession"),": All of these classes are subclasses of ",(0,a.kt)("inlineCode",{parentName:"li"},"BaseTracer"),"."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"OpenAIEmbeddings"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"HuggingFaceEmbeddings"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"CohereEmbeddings"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"JinaEmbeddings"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"LlamaCppEmbeddings"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"HuggingFaceHubEmbeddings"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"TensorflowHubEmbeddings"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"SagemakerEndpointEmbeddings"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"HuggingFaceInstructEmbeddings"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"SelfHostedEmbeddings"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"SelfHostedHuggingFaceEmbeddings"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"SelfHostedHuggingFaceInstructEmbeddings"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"FakeEmbeddings"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"AlephAlphaAsymmetricSemanticEmbedding"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"AlephAlphaSymmetricSemanticEmbedding"),": All of these classes are subclasses of ",(0,a.kt)("inlineCode",{parentName:"li"},"BaseLLM"),". ")),(0,a.kt)("p",null,"-> ",(0,a.kt)("strong",{parentName:"p"},"Question"),": What classes are derived from the Chain class? "),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Answer"),": There are multiple classes that are derived from the Chain class. Some of them are:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"APIChain"),(0,a.kt)("li",{parentName:"ul"},"AnalyzeDocumentChain"),(0,a.kt)("li",{parentName:"ul"},"ChatVectorDBChain"),(0,a.kt)("li",{parentName:"ul"},"CombineDocumentsChain"),(0,a.kt)("li",{parentName:"ul"},"ConstitutionalChain"),(0,a.kt)("li",{parentName:"ul"},"ConversationChain"),(0,a.kt)("li",{parentName:"ul"},"GraphQAChain"),(0,a.kt)("li",{parentName:"ul"},"HypotheticalDocumentEmbedder"),(0,a.kt)("li",{parentName:"ul"},"LLMChain"),(0,a.kt)("li",{parentName:"ul"},"LLMCheckerChain"),(0,a.kt)("li",{parentName:"ul"},"LLMRequestsChain"),(0,a.kt)("li",{parentName:"ul"},"LLMSummarizationCheckerChain"),(0,a.kt)("li",{parentName:"ul"},"MapReduceChain"),(0,a.kt)("li",{parentName:"ul"},"OpenAPIEndpointChain"),(0,a.kt)("li",{parentName:"ul"},"PALChain"),(0,a.kt)("li",{parentName:"ul"},"QAWithSourcesChain"),(0,a.kt)("li",{parentName:"ul"},"RetrievalQA"),(0,a.kt)("li",{parentName:"ul"},"RetrievalQAWithSourcesChain"),(0,a.kt)("li",{parentName:"ul"},"SequentialChain"),(0,a.kt)("li",{parentName:"ul"},"SQLDatabaseChain"),(0,a.kt)("li",{parentName:"ul"},"TransformChain"),(0,a.kt)("li",{parentName:"ul"},"VectorDBQA"),(0,a.kt)("li",{parentName:"ul"},"VectorDBQAWithSourcesChain")),(0,a.kt)("p",null,"There might be more classes that are derived from the Chain class as it is possible to create custom classes that extend the Chain class."),(0,a.kt)("p",null,"-> ",(0,a.kt)("strong",{parentName:"p"},"Question"),": What classes and functions in the ./langchain/utilities/ forlder are not covered by unit tests? "),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Answer"),": All classes and functions in the ",(0,a.kt)("inlineCode",{parentName:"p"},"./langchain/utilities/")," folder seem to have unit tests written for them."))}f.isMDXComponent=!0}}]);