"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[56553],{3905:(e,t,n)=>{n.d(t,{Zo:()=>h,kt:()=>d});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=a.createContext({}),i=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},h=function(e){var t=i(e.components);return a.createElement(c.Provider,{value:t},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,c=e.parentName,h=r(e,["components","mdxType","originalType","parentName"]),p=i(n),u=o,d=p["".concat(c,".").concat(u)]||p[u]||g[u]||s;return n?a.createElement(d,l(l({ref:t},h),{},{components:n})):a.createElement(d,l({ref:t},h))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,l=new Array(s);l[0]=u;var r={};for(var c in t)hasOwnProperty.call(t,c)&&(r[c]=t[c]);r.originalType=e,r[p]="string"==typeof e?e:o,l[1]=r;for(var i=2;i<s;i++)l[i]=n[i];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},286:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>r,toc:()=>i});var a=n(87462),o=(n(67294),n(3905));const s={},l="Shell Tool",r={unversionedId:"modules/agents/tools/integrations/bash",id:"modules/agents/tools/integrations/bash",title:"Shell Tool",description:"Giving agents access to the shell is powerful (though risky outside a sandboxed environment).",source:"@site/docs/modules/agents/tools/integrations/bash.md",sourceDirName:"modules/agents/tools/integrations",slug:"/modules/agents/tools/integrations/bash",permalink:"/langchain-docs-scratch/docs/modules/agents/tools/integrations/bash",draft:!1,editUrl:"https://github.com/hwchase17/langchainjs/edit/main/docs/docs/modules/agents/tools/integrations/bash.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"awslambda",permalink:"/langchain-docs-scratch/docs/modules/agents/tools/integrations/awslambda"},next:{title:"Bing Search",permalink:"/langchain-docs-scratch/docs/modules/agents/tools/integrations/bing_search"}},c={},i=[{value:"Use with Agents",id:"use-with-agents",level:3}],h=(p="CodeOutputBlock",function(e){return console.warn("Component "+p+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",e)});var p;const g={toc:i},u="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,a.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"shell-tool"},"Shell Tool"),(0,o.kt)("p",null,"Giving agents access to the shell is powerful (though risky outside a sandboxed environment)."),(0,o.kt)("p",null,"The LLM can use it to execute any shell commands. A common use case for this is letting the LLM interact with your local file system."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from langchain.tools import ShellTool\n\nshell_tool = ShellTool()\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'print(shell_tool.run({"commands": ["echo \'Hello World!\'", "time"]}))\n')),(0,o.kt)(h,{lang:"python",mdxType:"CodeOutputBlock"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"    Hello World!\n    \n    real    0m0.000s\n    user    0m0.000s\n    sys 0m0.000s\n    \n\n\n    /Users/wfh/code/lc/lckg/langchain/tools/shell/tool.py:34: UserWarning: The shell tool has no safeguards by default. Use at your own risk.\n      warnings.warn(\n"))),(0,o.kt)("h3",{id:"use-with-agents"},"Use with Agents"),(0,o.kt)("p",null,"As with all tools, these can be given to an agent to accomplish more complex tasks. Let's have the agent fetch some links from a web page."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'from langchain.chat_models import ChatOpenAI\nfrom langchain.agents import initialize_agent\nfrom langchain.agents import AgentType\n\nllm = ChatOpenAI(temperature=0)\n\nshell_tool.description = shell_tool.description + f"args {shell_tool.args}".replace("{", "{{").replace("}", "}}")\nself_ask_with_search = initialize_agent([shell_tool], llm, agent=AgentType.CHAT_ZERO_SHOT_REACT_DESCRIPTION, verbose=True)\nself_ask_with_search.run("Download the langchain.com webpage and grep for all urls. Return only a sorted list of them. Be sure to use double quotes.")\n')),(0,o.kt)(h,{lang:"python",mdxType:"CodeOutputBlock"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'    \n    \n    > Entering new AgentExecutor chain...\n    Question: What is the task?\n    Thought: We need to download the langchain.com webpage and extract all the URLs from it. Then we need to sort the URLs and return them.\n    Action:\n    ```\n    {\n      "action": "shell",\n      "action_input": {\n        "commands": [\n          "curl -s https://langchain.com | grep -o \'http[s]*://[^\\" ]*\' | sort"\n        ]\n      }\n    }\n    ```\n\n\n    /Users/wfh/code/lc/lckg/langchain/tools/shell/tool.py:34: UserWarning: The shell tool has no safeguards by default. Use at your own risk.\n      warnings.warn(\n\n\n    \n    Observation: https://blog.langchain.dev/\n    https://discord.gg/6adMQxSpJS\n    https://docs.langchain.com/docs/\n    https://github.com/hwchase17/chat-langchain\n    https://github.com/hwchase17/langchain\n    https://github.com/hwchase17/langchainjs\n    https://github.com/sullivan-sean/chat-langchainjs\n    https://js.langchain.com/docs/\n    https://python.langchain.com/en/latest/\n    https://twitter.com/langchainai\n    \n    Thought:The URLs have been successfully extracted and sorted. We can return the list of URLs as the final answer.\n    Final Answer: ["https://blog.langchain.dev/", "https://discord.gg/6adMQxSpJS", "https://docs.langchain.com/docs/", "https://github.com/hwchase17/chat-langchain", "https://github.com/hwchase17/langchain", "https://github.com/hwchase17/langchainjs", "https://github.com/sullivan-sean/chat-langchainjs", "https://js.langchain.com/docs/", "https://python.langchain.com/en/latest/", "https://twitter.com/langchainai"]\n    \n    > Finished chain.\n\n\n\n\n\n    \'["https://blog.langchain.dev/", "https://discord.gg/6adMQxSpJS", "https://docs.langchain.com/docs/", "https://github.com/hwchase17/chat-langchain", "https://github.com/hwchase17/langchain", "https://github.com/hwchase17/langchainjs", "https://github.com/sullivan-sean/chat-langchainjs", "https://js.langchain.com/docs/", "https://python.langchain.com/en/latest/", "https://twitter.com/langchainai"]\'\n'))))}d.isMDXComponent=!0}}]);