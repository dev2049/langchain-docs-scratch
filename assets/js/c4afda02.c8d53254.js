"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[90352],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>k});var n=a(67294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var d=n.createContext({}),s=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},p=function(e){var t=s(e.components);return n.createElement(d.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,o=e.originalType,d=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=s(a),m=i,k=c["".concat(d,".").concat(m)]||c[m]||u[m]||o;return a?n.createElement(k,r(r({ref:t},p),{},{components:a})):n.createElement(k,r({ref:t},p))}));function k(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=a.length,r=new Array(o);r[0]=m;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[c]="string"==typeof e?e:i,r[1]=l;for(var s=2;s<o;s++)r[s]=a[s];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},66904:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var n=a(87462),i=(a(67294),a(3905));const o={},r="Wikipedia",l={unversionedId:"modules/data_io/document_loaders/integrations/wikipedia",id:"modules/data_io/document_loaders/integrations/wikipedia",title:"Wikipedia",description:"Wikipedia is a multilingual free online encyclopedia written and maintained by a community of volunteers, known as Wikipedians, through open collaboration and using a wiki-based editing system called MediaWiki. Wikipedia is the largest and most-read reference work in history.",source:"@site/docs/modules/data_io/document_loaders/integrations/wikipedia.md",sourceDirName:"modules/data_io/document_loaders/integrations",slug:"/modules/data_io/document_loaders/integrations/wikipedia",permalink:"/langchain-docs-scratch/docs/modules/data_io/document_loaders/integrations/wikipedia",draft:!1,editUrl:"https://github.com/hwchase17/langchainjs/edit/main/docs/docs/modules/data_io/document_loaders/integrations/wikipedia.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"WhatsApp Chat",permalink:"/langchain-docs-scratch/docs/modules/data_io/document_loaders/integrations/whatsapp_chat"},next:{title:"YouTube transcripts",permalink:"/langchain-docs-scratch/docs/modules/data_io/document_loaders/integrations/youtube_transcript"}},d={},s=[{value:"Installation",id:"installation",level:2},{value:"Examples",id:"examples",level:2}],p={toc:s},c="wrapper";function u(e){let{components:t,...a}=e;return(0,i.kt)(c,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"wikipedia"},"Wikipedia"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("a",{parentName:"p",href:"https://wikipedia.org/"},"Wikipedia")," is a multilingual free online encyclopedia written and maintained by a community of volunteers, known as Wikipedians, through open collaboration and using a wiki-based editing system called MediaWiki. ",(0,i.kt)("inlineCode",{parentName:"p"},"Wikipedia")," is the largest and most-read reference work in history.")),(0,i.kt)("p",null,"This notebook shows how to load wiki pages from ",(0,i.kt)("inlineCode",{parentName:"p"},"wikipedia.org")," into the Document format that we use downstream."),(0,i.kt)("h2",{id:"installation"},"Installation"),(0,i.kt)("p",null,"First, you need to install ",(0,i.kt)("inlineCode",{parentName:"p"},"wikipedia")," python package."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"#!pip install wikipedia\n")),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"WikipediaLoader")," has these arguments:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"query"),": free text which used to find documents in Wikipedia"),(0,i.kt)("li",{parentName:"ul"},"optional ",(0,i.kt)("inlineCode",{parentName:"li"},"lang"),': default="en". Use it to search in a specific language part of Wikipedia'),(0,i.kt)("li",{parentName:"ul"},"optional ",(0,i.kt)("inlineCode",{parentName:"li"},"load_max_docs"),": default=100. Use it to limit number of downloaded documents. It takes time to download all 100 documents, so use a small number for experiments. There is a hard limit of 300 for now."),(0,i.kt)("li",{parentName:"ul"},"optional ",(0,i.kt)("inlineCode",{parentName:"li"},"load_all_available_meta"),": default=False. By default only the most important fields downloaded: ",(0,i.kt)("inlineCode",{parentName:"li"},"Published")," (date when document was published/last updated), ",(0,i.kt)("inlineCode",{parentName:"li"},"title"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"Summary"),". If True, other fields also downloaded.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"from langchain.document_loaders import WikipediaLoader\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"docs = WikipediaLoader(query='HUNTER X HUNTER', load_max_docs=2).load()\nlen(docs)\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"docs[0].metadata  # meta-information of the Document\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"docs[0].page_content[:400]  # a content of the Document\n")))}u.isMDXComponent=!0}}]);